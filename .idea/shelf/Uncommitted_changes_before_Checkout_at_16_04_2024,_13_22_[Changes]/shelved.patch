Index: API/Apps/Tournament/api/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from rest_framework.permissions import IsAuthenticated\n\nfrom ...Profile.models import Profile\nfrom ..models import Tournament\nfrom django.http import HttpResponse\nfrom rest_framework.response import Response\nfrom ..Serializers import TournamentGetSerializer, TournamentPostSerializer\nfrom rest_framework.decorators import api_view, permission_classes\n\n\n@api_view(['GET', 'POST'])\ndef create(request, profile_id):\n\n    try:\n        profiles = Profile.objects.get(id=profile_id)\n    except Profile.DoesNotExist:\n        return Response(status=400)\n\n    if request.method == 'GET':\n        Tournaments = Tournament.objects.all()\n        serializer = TournamentGetSerializer(Tournaments, many=True)\n        return Response(serializer.data)\n    elif request.method == 'POST':\n        request.data['created_by'] = profile_id\n        request.data['current_participants'] = [profile_id]\n        serializert = TournamentPostSerializer(data=request.data)\n        if serializert.is_valid():\n            serializert.save()\n            return Response(serializert.data, status=201)\n    return Response(serializert.errors, status=400)\n\n\n@api_view(['GET', 'PUT', 'DELETE'])\ndef get_tournaments(request, profile_id, tournament_id):\n    try:\n        instance = Profile.objects.get(id=profile_id)\n    except Profile.DoesNotExist:\n        return Response(status=400)\n\n    try:\n        tournament = Tournament.objects.get(id=tournament_id)\n    except Tournament.DoesNotExist:\n        return Response(status=400)\n\n    if request.method == 'GET':\n        serializer = TournamentGetSerializer(tournament)\n        return Response(serializer.data)\n    elif request.method == 'PUT':\n        serializert = TournamentPostSerializer(tournament, data=request.data)\n        if serializert.is_valid():\n            serializert.save()\n            return Response()\n    elif request.method == 'DELETE':\n        if tournament.created_by.id == profile_id:\n            tournament.delete()\n            return Response(status=200)\n        else:\n            return Response(status=400)\n\n\n\n\n@api_view(['GET', 'POST'])\ndef join(request, profile_id, tournament_id):\n    try:\n        instance = Profile.objects.get(id=profile_id)\n    except Profile.DoesNotExist:\n        return Response(data={\"error\": \"invalid user\"},status=400)\n\n    try:\n        tournament = Tournament.objects.get(id=tournament_id)\n    except Tournament.DoesNotExist:\n        return Response(data={\"error\": \"invalid tournament\"}, status=400)\n\n    participants = tournament.current_participants.filter(id=profile_id)\n    if participants.exists():\n        return Response(data={\"error\": \"You are already on channel\"}, status=400)\n    elif tournament.current_participants.count() < tournament.max_participants:\n        tournament.current_participants.add(instance)\n        tournament.save()\n        return Response(status=200)\n    else:\n        return Response(data={\"error\": \"You have reached the maximum number of participants\"})\n\n\n\n@api_view(['GET', 'POST'])\ndef delete(request, profile_id, tournament_id):\n    try:\n        instance = Profile.objects.get(id=profile_id)\n    except Profile.DoesNotExist:\n        return Response(data={\"error\": \"invalid user\"},status=400)\n\n    try:\n        tournament = Tournament.objects.get(id=tournament_id)\n    except Tournament.DoesNotExist:\n        return Response(data={\"error\": \"invalid tournament\"}, status=400)\n\n    participants = tournament.current_participants.filter(id=profile_id)\n    if participants.exists():\n        tournament.current_participants.remove(instance)\n        tournament.save()\n        if tournament.current_participants.count() == 0:\n            tournament.delete()\n        return Response(status=200)\n    else:\n        return Response(status=400)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/API/Apps/Tournament/api/views.py b/API/Apps/Tournament/api/views.py
--- a/API/Apps/Tournament/api/views.py	
+++ b/API/Apps/Tournament/api/views.py	
@@ -105,3 +105,5 @@
         return Response(status=200)
     else:
         return Response(status=400)
+
+

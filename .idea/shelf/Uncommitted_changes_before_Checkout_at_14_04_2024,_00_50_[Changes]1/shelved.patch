Index: .idea/shelf/Uncommitted_changes_before_Update_at_5_04_2024,_01_02_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_5_04_2024,_01_02_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_5_04_2024,_01_02_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_5_04_2024,_01_02_[Changes]/shelved.patch	
+++ /dev/null	
@@ -1,40 +0,0 @@
-Index: Backend/static/scripts/profile.js
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import BaseComponent from \"../components/Component.js\";\nimport {API_URL, BASE_URL, getCookie, loadPage} from \"./spa.js\";\nimport {notify} from \"../components/Notification.js\";\nimport {request} from \"./Request.js\";\nimport {escapeHTML} from \"./utils.js\";\nclass History extends BaseComponent\n{\n    constructor(state,parentElement = null) {\n        super(state,parentElement);\n        this.handleHTML()\n    }\n    handleHTML()\n    {\n        return `\n            <div class=\"histories-wrapper\">\n            ${this.state.histories.map(history => `\n              <div class=\"history-wrapper\">\n                <div class=\"friend-info\">\n                  <div class=\"history-type\"><h5>1v1</h5></div>\n                </div>\n                <div class=\"history-data\">\n                  <h5>BSAMLI</h5>\n                  <h5>VS</h5>\n                  <h5>OFIRAT</h5>\n                </div>\n                <div class=\"history-score\">\n                  <h5>4</h5>\n                  <h5>-</h5>\n                  <h5>0</h5>\n                </div>\n                <div>\n                  <h5>1 DAY AGO</h5>\n                </div>\n              </div>\n            `)}\n            </div>\n          </div>\n`\n    }\n    render() {\n        this.parentElement.innerHTML = this.handleHTML();\n    }\n}\nclass Stats extends BaseComponent {\n    constructor(state, parentElement = null) {\n        super(state, parentElement);\n        this.html = this.handleHTML();\n    }\n\n    handleHTML() {\n    console.log(this.state)\n    return `\n    <div class=\"stats-wrapper\">\n    <div class=\"stats-row\">\n        <div class=\"stats-item\">\n            <h3>Total Games</h3>\n            <p class=\"stats-value\">${this.state.statsInfo.total_games}</p>\n        </div>\n        <div class=\"stats-item\">\n            <h3>Total Win</h3>\n            <p class=\"stats-value\">${this.state.statsInfo.total_wins}</p>\n        </div>\n    </div>\n    <div class=\"stats-row\">\n        <div class=\"stats-item\">\n            <h3>Total Losses</h3>\n            <p class=\"stats-value\">${this.state.statsInfo.total_losses}</p>\n        </div>\n        <div class=\"stats-item\">\n            <h3>Points</h3>\n            <p class=\"stats-value\">${this.state.statsInfo.points}</p>\n        </div>\n    </div>\n    <div class=\"stats-row\">\n        <div class=\"stats-item\">\n            <h3>Win Rate</h3>\n            <p class=\"stats-value\">%${((parseInt(this.state.statsInfo.total_wins) / (parseInt(this.state.statsInfo.total_wins) + parseInt(this.state.statsInfo.total_losses))) * 100).toFixed(2)}</p>\n        </div>\n        <div class=\"stats-item\">\n            <h3 href=\"leaderboard\" class=\"stats-value\">Rank</>\n            <p class=\"stats-value\">#3</p>\n        </div>\n    </div>\n</div>\n\n    `;\n}\n\n    render() {\n        this.parentElement.innerHTML = this.html;\n    }   \n}\nclass Friends extends BaseComponent\n{\n    constructor(state,parentElement = null) {\n        super(state,parentElement);\n        this.html = this.handleHTML()\n    }\n    handleHTML()\n    {\n        return `\n            <div class=\"friends-wrapper\">\n            ${this.state.friends.map(friend => `\n              <div class=\"friend-wrapper\">\n                <div class=\"friend-info\">\n                  <div class=\"friend-image\">\n                    <img src=\"https://picsum.photos/id/237/200/300\" alt=\"\" />\n                  </div>\n                  <div class=\"friend-data\">\n                    <h6>${friend.user.first_name.length  > 0 ?escapeHTML(friend.user.first_name) : \"No name is set for this user\" }</h6>\n                    <span>${friend.nickname.length > 0 ? friend.nickname: friend.user.username}</span>\n                  </div>\n                </div>\n                <div class=\"friend-more\">\n                  <div><img src=\"/static/public/image.svg\" alt=\"\" /></div>\n                  <div><img src=\"/static/public/chat-bubble.svg\"/></div>\n                  <div><img src=\"/static/public/more.svg\" alt=\"\" /></div>\n                </div>\n              </div>\n            `).join('')}\n          </div>\n        `\n    }\n    setState(newState) {\n        this.state = { ...this.state, ...newState };\n        this.render();\n    }\n}\n\nclass ProfileInfo extends BaseComponent\n{\n    constructor(state,parentElement = null) {\n        super(state,parentElement);\n    }\n    handleEditHTML()\n    {\n        const {nickname, first_name, last_name,bio,profile_picture} = this.state.profile;\n        return `\n        <div class=\"profile-info-wrapper\">\n                <div class=\"profile-edit\">\n                    <button class=\"pong-button\" id=\"edit-button\">\n                X\n                    </button>\n                </div>\n        <form style=\"display: flex; flex-direction: column; align-items: center\" id=\"update-form\">\n              <div class=\"profile-photo\">\n                <img\n                  src=\"${BASE_URL}${profile_picture}\"\n                  alt=\"\"\n                  class=\"\"\n                />\n              </div>\n              <div>\n                <input class=\"transparent-input\" id=\"profile-nickname\" value=\"${nickname ? nickname: \"no nickname is set!\"}\"/>\n                <input class=\"transparent-input\" id=\"profile-firstname\"  value=\"${first_name ? first_name: \"no first name is set\"}\">\n              </div>\n              <div>\n                <textarea id=\"profile-bio\" cols=\"30\" rows=\"5\"  class=\"transparent-input\">${bio ? bio : 'No bio available'}</textarea>  \n              </div>\n        <button class=\"pong-button\" id=\"save-button\" type=\"submit\">save</button>\n            </form>\n        </div>\n        `\n    }\n    handleHTML()\n    {\n        const {nickname, first_name, last_name,bio,profile_picture} = this.state.profile;\n        return `\n        <div class=\"profile-info-wrapper\">\n                <div class=\"profile-edit\">\n                    <button class=\"pong-button\" id=\"edit-button\">\n                    <img src=\"/static/public/edit.svg\" alt=\"\">\n                    </button>\n                </div>\n              <div class=\"profile-photo\">\n                <img\n                  src=\"${BASE_URL}${profile_picture}\"\n                  alt=\"\"\n                  class=\"\"\n                />\n              </div>\n              <div>\n                <h1>${nickname ? escapeHTML(nickname): \"no nickname is set!\"}</h1>\n                <span>${first_name ? escapeHTML(first_name): \"no first name is set\"}</span>\n              </div>\n              <div>\n                <p>\n                ${bio ? escapeHTML(bio): 'No bio available'}\n                </p>\n              </div>`\n    }\n    updateProfile = async (formData) => {\n        const tokens = JSON.parse(getCookie('tokens'));\n        try\n        {\n            let response = await request(`${API_URL}/profile`,{\n                method:'PUT',\n                headers:{\n                    'Content-Type':'application/json',\n                    'Authorization':`Bearer ${tokens.access}`\n                },\n                body: JSON.stringify(formData)\n            });\n            notify('Profile updated', 3, 'success');\n            this.setState({...this.state, profile:response});\n        }\n        catch(error)\n        {\n            console.error('Error:', error);\n            notify('Error updating profile', 3, 'error')\n        }\n    }\n    render() {\n        this.parentElement.innerHTML = this.state.isEditing ? this.handleEditHTML() : this.handleHTML();\n        const updateForm = document.getElementById('update-form');\n        if(updateForm)\n        {\n            updateForm.addEventListener('submit', async (e) => {\n                e.preventDefault()\n                let formData = {\n                    nickname: document.getElementById('profile-nickname').value,\n                    bio: document.getElementById('profile-bio').value\n                }\n                await this.updateProfile(formData);\n            });\n        }\n    }\n    setState(newState) {\n        this.state = { ...this.state, ...newState };\n        this.render();\n        document.getElementById('edit-button').addEventListener('click', () => {\n            this.setState({...this.state, isEditing: !this.state.isEditing});\n        });\n    }\n}\nasync function fetchProfile()\n{\n    const tokens = JSON.parse(getCookie('tokens'));\n    try\n    {\n    let data = await request(`${API_URL}/profile`,{\n        method:'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${tokens.access}`\n        }\n    });\n    const profileParentElement = document.getElementById('profile-info');\n    const profile = new ProfileInfo({profile:data,isEditing:false},profileParentElement);\n    profile.render();\n    const editButton = document.getElementById('edit-button');\n        editButton.addEventListener('click', () => {\n        profile.setState({...profile.state, isEditing: !profile.state.isEditing});\n    });\n    }\n    catch(error)\n    {\n        console.error('Error:', error);\n        notify('Error fetching profile', 3, 'error')\n    }\n}\nasync function assignDataRouting()\n{\n    const historyButton = document.getElementById('history-button');\n    const friendsButton  = document.getElementById('friends-button');\n    const statsButton = document.getElementById('stats-button');\n    historyButton.addEventListener('click', (e) => {\n        history.replaceState(null, null, '#history')\n        handleRouting()\n    });\n    friendsButton.addEventListener('click', (e) => {\n        history.replaceState(null, null, '#friends')\n        handleRouting()\n    });\n    statsButton.addEventListener('click', (e) => {\n        history.replaceState(null, null, '#stats')\n        handleRouting()\n    });\n}\n\nasync function fetchStats()\n{\n    try{\n        let response = await request(`${API_URL}/profile/stats`,{\n            method:'GET',\n            headers:{\n                'Content-Type':'application/json',\n                'Authorization':`Bearer ${JSON.parse(getCookie('tokens')).access}`\n            }\n        });\n        return response;\n    }\n    catch (error)\n    {\n        console.error('Error:', error);\n        notify('Error fetching stats', 3, 'error')\n    }\n}\n\nasync function fetchFriends()\n{\n    try{\n        let data = await request(`${API_URL}/profile/friends`,{\n            method:'GET',\n            headers:{\n                'Content-Type':'application/json',\n                'Authorization':`Bearer ${JSON.parse(getCookie('tokens')).access}`\n        }\n    });\n        return data;\n    }\n    catch (error)\n    {\n        console.error('Error:', error);\n        notify('Error fetching friends', 3, 'error')\n    }\n}\nasync function handleRouting()\n{\n    const hash = location.hash;\n    const parentElement = document.getElementById('data-wrapper');\n    if(hash === '#history')\n    {\n        const history = new History({histories: [1]},parentElement);\n        history.render();\n    }\n    if(hash === '#friends')\n    {\n        let data = await fetchFriends();\n        const friends = new Friends({friends:data},parentElement);\n        friends.render();\n    }\n    if(hash === '#stats')\n    {\n        let data = await fetchStats();\n        const statsInfo = new Stats({statsInfo:data}, parentElement);\n        statsInfo.render();\n    }\n}\n\nconst App = async () => {\n    await fetchProfile();\n    await assignDataRouting();\n    await handleRouting();\n}\n\nApp().catch((error) => console.error(error));
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/Backend/static/scripts/profile.js b/Backend/static/scripts/profile.js
---- a/Backend/static/scripts/profile.js	(revision 8f1fbb9bac7ad0e49363364a7eb5608aac4b9ba5)
-+++ b/Backend/static/scripts/profile.js	(date 1712160574222)
-@@ -135,6 +135,7 @@
-     handleEditHTML()
-     {
-         const {nickname, first_name, last_name,bio,profile_picture} = this.state.profile;
-+        print(this.state.profile.nickname)
-         return `
-         <div class="profile-info-wrapper">
-                 <div class="profile-edit">
-Index: API/API/settings.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>\"\"\"\nDjango settings for API project.\n\nGenerated by 'django-admin startproject' using Django 5.0.3.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/5.0/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/5.0/ref/settings/\n\"\"\"\nimport os\nfrom pathlib import Path\n\nfrom dotenv import load_dotenv\nimport datetime\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\nload_dotenv()\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = '0a4fd7e3567eab20bab2f2d6682ea96d0d865050bfcde9c293aa7f9ec48bce55'\n\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = ['*']\nCORS_ALLOWED_ORIGINS = [\n    \"http://localhost:3000\",\n]\nCSRF_TRUSTED_ORIGINS = [\n    \"http://localhost:3000\",\n]\nCORS_ALLOW_CREDENTIALS = True\n# Application definition\n\nINSTALLED_APPS = [\n    'daphne',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'corsheaders',\n    \"Apps.Auth.apps.AuthConfig\",\n    \"Apps.Profile.apps.ProfileConfig\",\n    \"Apps.Tournament.apps.TournamentConfig\",\n    'Apps.SocialMedia.apps.SocialmediaConfig',\n    \"Apps.Chat.apps.ChatConfig\",\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'API.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates']\n        ,\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'API.wsgi.application'\nASGI_APPLICATION = 'API.asgi.application'\n\nCHANNEL_LAYERS = {\n    \"default\": {\n        \"BACKEND\": \"channels_redis.core.RedisChannelLayer\",\n        \"CONFIG\": {\n            \"hosts\": [(\"127.0.0.1\", 6379)],\n        },\n    },\n}\n\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    )\n}\n\n\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\n\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.postgresql\",\n        \"NAME\": os.getenv('PG_DB'),\n        \"USER\": os.getenv('PG_USER'),\n        \"PASSWORD\": os.getenv('PG_PASSWORD'),\n        \"HOST\": os.getenv('PG_HOST'),\n        \"PORT\": os.getenv('PG_PORT'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/5.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'Europe/Istanbul'\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\n\nSTATIC_URL = 'static/'\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': datetime.timedelta(days=1),\n    'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=50),\n    'ROTATE_REFRESH_TOKENS': True,\n    'BLACKLIST_AFTER_ROTATION': True,\n    'UPDATE_LAST_LOGIN': False,\n    'ALGORITHM': 'HS256',\n    'VERIFYING_KEY': None,\n    'AUDIENCE': None,\n    'ISSUER': None,\n    'JWK_URL': None,\n    'LEEWAY': 0,\n    'AUTH_HEADER_TYPES': ('Bearer',),\n    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',\n    'USER_ID_FIELD': 'id',\n    'USER_ID_CLAIM': 'user_id',\n    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',\n    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),\n    'TOKEN_TYPE_CLAIM': 'token_type',\n    'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',\n    'TOKEN_EXPIRED_CALLBACK': 'token_expired_callback',\n    'JTI_CLAIM': 'jti',\n    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',\n    'SLIDING_TOKEN_LIFETIME': datetime.timedelta(minutes=5),\n    'SLIDING_TOKEN_REFRESH_LIFETIME': datetime.timedelta(days=1),\n}\n\n\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_USE_TLS = True\nEMAIL_PORT = 587\nEMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_USE_SSL = False\n\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media/images'\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/API/API/settings.py b/API/API/settings.py
---- a/API/API/settings.py	(revision 8f1fbb9bac7ad0e49363364a7eb5608aac4b9ba5)
-+++ b/API/API/settings.py	(date 1712190527905)
-@@ -32,9 +32,11 @@
- ALLOWED_HOSTS = ['*']
- CORS_ALLOWED_ORIGINS = [
-     "http://localhost:3000",
-+    "http://127.0.0.1:3000"
- ]
- CSRF_TRUSTED_ORIGINS = [
-     "http://localhost:3000",
-+    "http://127.0.0.1:3000"
- ]
- CORS_ALLOW_CREDENTIALS = True
- # Application definition
Index: .idea/shelf/Uncommitted_changes_before_Update_at_5_04_2024__14_28__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_5_04_2024__14_28__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_5_04_2024__14_28__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_5_04_2024__14_28__Changes_.xml	
+++ /dev/null	
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_5_04_2024,_14_28_[Changes]" date="1712316499250" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_04_2024,_14_28_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 5.04.2024, 14:28 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_5_04_2024,_14_28_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_5_04_2024,_14_28_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_5_04_2024,_14_28_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_5_04_2024,_14_28_[Changes]/shelved.patch	
+++ /dev/null	
@@ -1,58 +0,0 @@
-Index: Backend/static/scripts/profile.js
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import BaseComponent from \"../components/Component.js\";\nimport {API_URL, BASE_URL, getCookie, loadPage} from \"./spa.js\";\nimport {notify} from \"../components/Notification.js\";\nimport {request} from \"./Request.js\";\nimport {escapeHTML} from \"./utils.js\";\nclass History extends BaseComponent\n{\n    constructor(state,parentElement = null) {\n        super(state,parentElement);\n        this.handleHTML()\n    }\n    handleHTML()\n    {\n        return `\n            <div class=\"histories-wrapper\">\n            ${this.state.histories.map(history => `\n              <div class=\"history-wrapper\">\n                <div class=\"friend-info\">\n                  <div class=\"history-type\"><h5>1v1</h5></div>\n                </div>\n                <div class=\"history-data\">\n                  <h5>BSAMLI</h5>\n                  <h5>VS</h5>\n                  <h5>OFIRAT</h5>\n                </div>\n                <div class=\"history-score\">\n                  <h5>4</h5>\n                  <h5>-</h5>\n                  <h5>0</h5>\n                </div>\n                <div>\n                  <h5>1 DAY AGO</h5>\n                </div>\n              </div>\n            `)}\n            </div>\n          </div>\n`\n    }\n    render() {\n        this.parentElement.innerHTML = this.handleHTML();\n    }\n}\nclass Stats extends BaseComponent {\n    constructor(state, parentElement = null) {\n        super(state, parentElement);\n        this.html = this.handleHTML();\n    }\n\n    handleHTML() {\n    console.log(this.state)\n    return `\n    <div class=\"stats-wrapper\">\n    <div class=\"stats-row\">\n        <div class=\"stats-item\">\n            <h3>Total Games</h3>\n            <p class=\"stats-value\">${this.state.statsInfo.total_games}</p>\n        </div>\n        <div class=\"stats-item\">\n            <h3>Total Win</h3>\n            <p class=\"stats-value\">${this.state.statsInfo.total_wins}</p>\n        </div>\n    </div>\n    <div class=\"stats-row\">\n        <div class=\"stats-item\">\n            <h3>Total Losses</h3>\n            <p class=\"stats-value\">${this.state.statsInfo.total_losses}</p>\n        </div>\n        <div class=\"stats-item\">\n            <h3>Points</h3>\n            <p class=\"stats-value\">${this.state.statsInfo.points}</p>\n        </div>\n    </div>\n    <div class=\"stats-row\">\n        <div class=\"stats-item\">\n            <h3>Win Rate</h3>\n            <p class=\"stats-value\">%${((parseInt(this.state.statsInfo.total_wins) / (parseInt(this.state.statsInfo.total_wins) + parseInt(this.state.statsInfo.total_losses))) * 100).toFixed(2)}</p>\n        </div>\n        <div class=\"stats-item\">\n            <h3 href=\"leaderboard\" class=\"stats-value\">Rank</>\n            <p class=\"stats-value\">#3</p>\n        </div>\n    </div>\n</div>\n\n    `;\n}\n\n    render() {\n        this.parentElement.innerHTML = this.html;\n    }   \n}\nclass Friends extends BaseComponent\n{\n    constructor(state,parentElement = null) {\n        super(state,parentElement);\n        this.html = this.handleHTML()\n    }\n    handleHTML()\n    {\n        return `\n            <div class=\"friends-wrapper\">\n            ${this.state.friends.map(friend => `\n              <div class=\"friend-wrapper\">\n                <div class=\"friend-info\">\n                  <div class=\"friend-image\">\n                    <img src=\"https://picsum.photos/id/237/200/300\" alt=\"\" />\n                  </div>\n                  <div class=\"friend-data\">\n                    <h6>${friend.user.first_name.length  > 0 ?escapeHTML(friend.user.first_name) : \"No name is set for this user\" }</h6>\n                    <span>${friend.nickname.length > 0 ? friend.nickname: friend.user.username}</span>\n                  </div>\n                </div>\n                <div class=\"friend-more\">\n                  <div><img src=\"/static/public/image.svg\" alt=\"\" /></div>\n                  <div><img src=\"/static/public/chat-bubble.svg\"/></div>\n                  <div><img src=\"/static/public/more.svg\" alt=\"\" /></div>\n                </div>\n              </div>\n            `).join('')}\n          </div>\n        `\n    }\n    setState(newState) {\n        this.state = { ...this.state, ...newState };\n        this.render();\n    }\n}\n\nclass ProfileInfo extends BaseComponent\n{\n    constructor(state,parentElement = null) {\n        super(state,parentElement);\n    }\n    handleEditHTML()\n    {\n        const {nickname, first_name, last_name,bio,profile_picture} = this.state.profile;\n        return `\n        <div class=\"profile-info-wrapper\">\n                <div class=\"profile-edit\">\n                    <button class=\"pong-button\" id=\"edit-button\">\n                X\n                    </button>\n                </div>\n        <form style=\"display: flex; flex-direction: column; align-items: center\" id=\"update-form\">\n              <div class=\"profile-photo\">\n                <img\n                  src=\"${BASE_URL}${profile_picture}\"\n                  alt=\"\"\n                  class=\"\"\n                />\n              </div>\n              <div>\n                <input class=\"transparent-input\" id=\"profile-nickname\" value=\"${nickname ? nickname: \"no nickname is set!\"}\"/>\n                <input class=\"transparent-input\" id=\"profile-firstname\"  value=\"${first_name ? first_name: \"no first name is set\"}\">\n              </div>\n              <div>\n                <textarea id=\"profile-bio\" cols=\"30\" rows=\"5\"  class=\"transparent-input\">${bio ? bio : 'No bio available'}</textarea>  \n              </div>\n        <button class=\"pong-button\" id=\"save-button\" type=\"submit\">save</button>\n            </form>\n        </div>\n        `\n    }\n    handleHTML()\n    {\n        const {nickname, first_name, last_name,bio,profile_picture} = this.state.profile;\n        return `\n        <div class=\"profile-info-wrapper\">\n                <div class=\"profile-edit\">\n                    <button class=\"pong-button\" id=\"edit-button\">\n                    <img src=\"/static/public/edit.svg\" alt=\"\">\n                    </button>\n                </div>\n              <div class=\"profile-photo\">\n                <img\n                  src=\"${BASE_URL}${profile_picture}\"\n                  alt=\"\"\n                  class=\"\"\n                />\n              </div>\n              <div>\n                <h1>${nickname ? escapeHTML(nickname): \"no nickname is set!\"}</h1>\n                <span>${first_name ? escapeHTML(first_name): \"no first name is set\"}</span>\n              </div>\n              <div>\n                <p>\n                ${bio ? escapeHTML(bio): 'No bio available'}\n                </p>\n              </div>`\n    }\n    updateProfile = async (formData) => {\n        const tokens = JSON.parse(getCookie('tokens'));\n        try\n        {\n            let response = await request(`${API_URL}/profile`,{\n                method:'PUT',\n                headers:{\n                    'Content-Type':'application/json',\n                    'Authorization':`Bearer ${tokens.access}`\n                },\n                body: JSON.stringify(formData)\n            });\n            notify('Profile updated', 3, 'success');\n            this.setState({...this.state, profile:response});\n        }\n        catch(error)\n        {\n            console.error('Error:', error);\n            notify('Error updating profile', 3, 'error')\n        }\n    }\n    render() {\n        this.parentElement.innerHTML = this.state.isEditing ? this.handleEditHTML() : this.handleHTML();\n        const updateForm = document.getElementById('update-form');\n        if(updateForm)\n        {\n            updateForm.addEventListener('submit', async (e) => {\n                e.preventDefault()\n                let formData = {\n                    nickname: document.getElementById('profile-nickname').value,\n                    bio: document.getElementById('profile-bio').value\n                }\n                await this.updateProfile(formData);\n            });\n        }\n    }\n    setState(newState) {\n        this.state = { ...this.state, ...newState };\n        this.render();\n        document.getElementById('edit-button').addEventListener('click', () => {\n            this.setState({...this.state, isEditing: !this.state.isEditing});\n        });\n    }\n}\nasync function fetchProfile()\n{\n    const pathName = window.location.pathname;\n    const pathParts = pathName.split('/');\n    const nickname = pathParts[pathParts.length - 1];\n    const tokens = JSON.parse(getCookie('tokens'));\n    try\n    {\n    let data = await request(`${API_URL}/profile/`,{\n        method:'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${tokens.access}`\n        }\n    });\n        console.log(data)\n    const profileParentElement = document.getElementById('profile-info');\n    const profile = new ProfileInfo({profile:data,isEditing:false},profileParentElement);\n    profile.render();\n    const editButton = document.getElementById('edit-button');\n        editButton.addEventListener('click', () => {\n        profile.setState({...profile.state, isEditing: !profile.state.isEditing});\n    });\n    }\n    catch(error)\n    {\n        console.error('Error:', error);\n        notify('Error fetching profile', 3, 'error')\n        loadPage('/home');\n    }\n}\nasync function assignDataRouting()\n{\n    const historyButton = document.getElementById('history-button');\n    const friendsButton  = document.getElementById('friends-button');\n    const statsButton = document.getElementById('stats-button');\n    historyButton.addEventListener('click', (e) => {\n        history.replaceState(null, null, '#history')\n        handleRouting()\n    });\n    friendsButton.addEventListener('click', (e) => {\n        history.replaceState(null, null, '#friends')\n        handleRouting()\n    });\n    statsButton.addEventListener('click', (e) => {\n        history.replaceState(null, null, '#stats')\n        handleRouting()\n    });\n}\n\nasync function fetchStats()\n{\n    try{\n        let response = await request(`${API_URL}/profile/stats`,{\n            method:'GET',\n            headers:{\n                'Content-Type':'application/json',\n                'Authorization':`Bearer ${JSON.parse(getCookie('tokens')).access}`\n            }\n        });\n        return response;\n    }\n    catch (error)\n    {\n        console.error('Error:', error);\n        notify('Error fetching stats', 3, 'error')\n    }\n}\n\nasync function fetchFriends()\n{\n    try{\n        let data = await request(`${API_URL}/profile/friends`,{\n            method:'GET',\n            headers:{\n                'Content-Type':'application/json',\n                'Authorization':`Bearer ${JSON.parse(getCookie('tokens')).access}`\n        }\n    });\n        return data;\n    }\n    catch (error)\n    {\n        console.error('Error:', error);\n        notify('Error fetching friends', 3, 'error')\n    }\n}\nasync function handleRouting()\n{\n    const hash = location.hash;\n    const parentElement = document.getElementById('data-wrapper');\n    if(hash === '#history')\n    {\n        const history = new History({histories: [1]},parentElement);\n        history.render();\n    }\n    if(hash === '#friends')\n    {\n        let data = await fetchFriends();\n        const friends = new Friends({friends:data},parentElement);\n        friends.render();\n    }\n    if(hash === '#stats')\n    {\n        let data = await fetchStats();\n        const statsInfo = new Stats({statsInfo:data}, parentElement);\n        statsInfo.render();\n    }\n}\n\nconst App = async () => {\n    await fetchProfile();\n    await assignDataRouting();\n    await handleRouting();\n}\n\nApp().catch((error) => console.error(error));
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/Backend/static/scripts/profile.js b/Backend/static/scripts/profile.js
---- a/Backend/static/scripts/profile.js	(revision 8541ec7fb11979a88d2f8e05eaa16a38408e1955)
-+++ b/Backend/static/scripts/profile.js	(date 1712283364681)
-@@ -135,6 +135,7 @@
-     handleEditHTML()
-     {
-         const {nickname, first_name, last_name,bio,profile_picture} = this.state.profile;
-+        print(this.state.profile.nickname)
-         return `
-         <div class="profile-info-wrapper">
-                 <div class="profile-edit">
-Index: Backend/static/scripts/spa.js
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>export const API_URL = 'http://localhost:8000/api/v1';\nexport const BASE_URL = 'http://localhost:8000';\nexport function setCookie(name,value,days) {\n    let expires = \"\";\n    if (days) {\n        const date = new Date();\n        date.setTime(date.getTime() + (days*24*60*60*1000));\n        expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\n}\nexport function getCookie(name) {\n    const nameEQ = name + \"=\";\n    const ca = document.cookie.split(';');\n    for(let i=0; i < ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0)===' ') c = c.substring(1,c.length);\n        if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length,c.length);\n    }\n    return null;\n}\nconst routes = new Map([\n    ['login', {\n    auth_required:false,\n    url:[\"/auth/login/\"],\n    html: `\n    <div class=\"background container-fluid\">\n        <div class=\"d-flex align-items-center justify-content-center h-100\">\n            <form class=\"login-wrapper p-5 gap-2\" id=\"login-form\">\n                <div\n                        style=\"\n                display: flex;\n                align-items: center;\n                justify-content: center;\n              \"\n                >\n                    <h1 style=\"color: white\">LOGIN</h1>\n                </div>\n                <div>\n                    <input\n                            type=\"text\"\n                            class=\"login-input p-2\"\n                            id=\"username\"\n                            placeholder=\"USERNAME\"\n                    />\n                </div>\n                <div>\n                    <input\n                            type=\"text\"\n                            class=\"login-input p-2\"\n                            id=\"password\"\n                            placeholder=\"PASSWORD\"\n                    />\n                </div>\n                <div\n                        style=\"\n                display: flex;\n                align-items: center;\n                justify-content: center;\n              \"\n                >\n                    <div>\n\n                        <button class=\"login-button\" type=\"submit\">LOGIN</button>\n                        <pong-redirect href=\"register\">\n                            <button class=\"login-button\" type=\"button\">REGISTER</button>\n                        </pong-redirect>\n\n                    </div>\n                </div>\n                <button class=\"ecole-login-button\">\n                    Login with 42\n                    <div>\n                        <img src=\"/static/public/42.svg\" alt=\"\"/>\n                    </div>\n                </button>\n            </form>\n        </div>\n    </div>`\n    }],\n    ['register', {\n        auth_required: false,\n        url: [\"/auth/register/\"],\n        html: `\n              <div class=\"background container-fluid\">\n            <div class=\"d-flex align-items-center justify-content-center h-100\">\n              <form class=\"register-wrapper p-5 gap-2\" id=\"register-form\">{% csrf_token %}\n                <div\n                  style=\"\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                  \"\n                >\n                  <h1 style=\"color: white\">REGISTER</h1>\n                </div>\n                <div class=\"register-input-wrapper\">\n                  <label for=\"username\">username</label>\n                  <input\n                    type=\"text\"\n                    class=\"register-input p-2\"\n                    placeholder=\"USERNAME\"\n                    id=\"username\"\n                  />\n                </div>\n                <div class=\"register-password\">\n                  <div class=\"register-input-wrapper\">\n                    <label for=\"password\">password</label>\n                    <input\n                      type=\"text\"\n                      class=\"register-input p-2\"\n                      placeholder=\"PASSWORD\"\n                      id=\"password\"\n                      required\n                    />\n                  </div>\n                  <div class=\"register-input-wrapper\">\n                    <label for=\"password\">Re enter your password</label>\n                    <input\n                      type=\"text\"\n                      class=\"register-input p-2\"\n                      id=\"password2\"\n                      required\n                    />\n                  </div>\n                </div>\n                <div class=\"register-input-wrapper\">\n                  <label for=\"Email\">Email</label>\n                  <input\n                    type=\"text\"\n                    class=\"register-input p-2\"\n                    placeholder=\"EMAIL\"\n                    id=\"email\"\n                    required\n                  />\n                </div>\n                <div\n                  style=\"\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    gap: 10px;\n                    width: 100%;\n                  \"\n                >\n                  <div>\n                    <button class=\"register-button\" id=\"register-button\">\n                        REGISTER\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n    `\n    }],\n    ['profile', {\n        auth_required: true,\n        url: [/profile\\/[A-Za-z]+/],\n        html: `\n              <div\n        class=\"background container-fluid social-background\"\n        style=\"padding: 0\"\n      >\n        <div class=\"profile-wrapper\">\n          <div class=\"profile-info\" id=\"profile-info\">\n            <div class=\"profile-info-wrapper\">\n                <div class=\"profile-edit\">\n                    <button class=\"pong-button\" id=\"edit-button\">\n                        <img src=\"/static/public/edit.svg\" alt=\"\"></button>\n                </div>\n              <div class=\"profile-photo skeleton\"></div>\n              <div class=\"skeleton profile-data\">\n                <h1></h1>\n                <span></span>\n              </div>\n              <div class=\"profile-bio skeleton\">\n                <p></p>\n              </div>\n            </div>\n          </div>\n          <div class=\"profile-data\">\n            <div class=\"data-headers\">\n              <button class=\"header-wrapper\" id=\"history-button\"><span>MATCH HISTORY</span></button>\n              <button class=\"header-wrapper\" id=\"friends-button\"><span> FRIENDS </span></button>\n              <button class=\"header-wrapper\" id=\"stats-button\"><span>STATS</span></button>\n            </div>\n          <div id=\"data-wrapper\">\n                <div class=\"friends-wrapper\" style=\"display: none\">\n              <div class=\"friend-wrapper\">\n                <div class=\"friend-info\">\n                  <div class=\"friend-image\">\n                    <img src=\"https://picsum.photos/id/237/200/300\" alt=\"\" />\n                  </div>\n                  <div class=\"friend-data\">\n                    <h6>NAME</h6>\n                    <span>First Last name</span>\n                  </div>\n                </div>\n                <div class=\"friend-more\">\n                  <div><img src=\"/public/image.svg\" alt=\"\" /></div>\n                  <div><img src=\"/public/chat-bubble.svg\" alt=\"\" /></div>\n                  <div><img src=\"/public/more.svg\" alt=\"\" /></div>\n                </div>\n              </div>\n              <div class=\"friend-wrapper\">\n                <div class=\"friend-info\">\n                  <div class=\"friend-image\">\n                    <img src=\"https://picsum.photos/id/237/200/300\" alt=\"\" />\n                  </div>\n                  <div class=\"friend-data\">\n                    <h6>NAME</h6>\n                    <span>First Last name</span>\n                  </div>\n                </div>\n                <div class=\"friend-more\">\n                  <div><img src=\"/public/image.svg\" alt=\"\" /></div>\n                  <div><img src=\"/public/chat-bubble.svg\" alt=\"\" /></div>\n                  <div><img src=\"/public/more.svg\" alt=\"\" /></div>\n                </div>\n              </div>\n            </div>\n            <div class=\"histories-wrapper\">\n              <div class=\"history-wrapper\">\n                <div class=\"friend-info\">\n                  <div class=\"history-type\"><h5>1v1</h5></div>\n                </div>\n                <div class=\"history-data\">\n                  <h5>BSAMLI</h5>\n                  <h5>VS</h5>\n                  <h5>OFIRAT</h5>\n                </div>\n                <div class=\"history-score\">\n                  <h5>4</h5>\n                  <h5>-</h5>\n                  <h5>0</h5>\n                </div>\n                <div>\n                  <h5>1 DAY AGO</h5>\n                </div>\n              </div>\n              <div class=\"history-wrapper\">\n                <div class=\"friend-info\">\n                  <div class=\"history-type\"><h5>1v1</h5></div>\n                </div>\n                <div class=\"history-data\">\n                  <h5>BSAMLI</h5>\n                  <h5>VS</h5>\n                  <h5>OFIRAT</h5>\n                </div>\n                <div class=\"history-score\">\n                  <h5>4</h5>\n                  <h5>-</h5>\n                  <h5>0</h5>\n                </div>\n                <div>\n                  <h5>1 DAY AGO</h5>\n                </div>\n              </div>\n              <div class=\"history-wrapper\">\n                <div>\n                  <h5>Tournament</h5>\n                </div>\n                <div class=\"history-data\">\n                  <h5>BSAMLI</h5>\n                  <h5>VS</h5>\n                  <h5>OFIRAT</h5>\n                </div>\n                <div class=\"history-score\">\n                  <h5>4</h5>\n                  <h5>-</h5>\n                  <h5>0</h5>\n                </div>\n                <div>\n                  <h5>1 DAY AGO</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n          </div>\n        </div>\n      </div>\n`\n    }],\n    ['social',{\n    auth_required: true,\n    url: ['/social/',  '/social/\\\\w+/g'],\n    html: `\n      <ul class=\"chat-options\" id=\"chat-options\">\n        <li>Invite to Pong</li>\n        <li>Go To Profile</li>\n      </ul>\n          <div\n        class=\"background container-fluid social-background\"\n        style=\"padding: 0\"\n      >\n        <div class=\"d-flex h-100\">\n          <div class=\"d-flex position-relative\">\n            <div id=\"user-chat-friends\">\n                <div class=\"users-wrapper\">\n                <div>\n                  <div class=\"chat-send-wrapper\">\n                    <h2>SEARCH...</h2>\n                    <input type=\"text\" placeholder=\"SEARCH A NAME\" id=\"friend-search-input\" />\n                </div>\n              </div>\n              <div class=\"user-data-wrapper loading\" id=\"user-data-wrapper\">\n              <div class=\"lds-ring\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            </div>\n              </div>\n            </div>\n            </div>\n            <div class=\"chat-container\">\n              <div class=\"active-user-wrapper\">\n                <div class=\"user-info\">\n                  <div class=\"user-pic-wrapper\">\n                    <img\n                      src=\"https://picsum.photos/seed/picsum/200/300\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <div class=\"active-user-info-wrapper\">\n                    <h6>test1</h6>\n                    <span>active now</span>\n                    <div class=\"spotify-info\">\n                      <img src=\"/static/public/music.svg\" alt=\"\" style=\"width: 20px\" />\n                      <span>Currently listening test123</span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"d-flex\">\n                  <img src=\"/static/public/more.svg\" alt=\"\" style=\"width: 50px\" />\n                  <div id=\"chat-close-button\" style=\"cursor: pointer\">\n                    <img  src=\"/static/public/go-back.svg\" alt=\"\" />\n                  </div>\n                </div>\n              </div>\n              <div class=\"conversation-wrapper\">\n                <div class=\"received-message-container\">\n                  <span>TEST6</span>\n                  <p>\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit. A\n                    repudiandae autem quibusdam totam numquam explicabo saepe\n                    iure veritatis natus voluptas voluptate eveniet quos quasi\n                    facilis laudantium suscipit, obcaecati optio illo.\n                  </p>\n                </div>\n                <div class=\"sent-message-container\">\n                  <span>TEST2</span>\n                  <p>\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                    Quis cumque maxime iste odio ratione aliquid nisi commodi\n                    asperiores, quo nihil sint, voluptate iure vel accusamus\n                    odit incidunt porro debitis illo!\n                  </p>\n                </div>\n                <div class=\"sent-message-container\">\n                  <span>lorem</span>\n                  <p>\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                    Quis cumque maxime iste odio ratione aliquid nisi commodi\n                    asperiores, quo nihil sint, voluptate iure vel accusamus\n                    odit incidunt porro debitis illo!\n                  </p>\n                </div>\n                <div class=\"sent-message-container\">\n                  <span>TEST2</span>\n                  <p>\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                    Veniam accusantium fugit ad magnam, odio numquam id quidem\n                    saepe, deserunt consequuntur commodi animi dolor error\n                    debitis sed natus minus. Tempora, laborum?\n                  </p>\n                </div>\n                <div class=\"received-message-container\">\n                  <span>TEST6</span>\n                  <p>\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit. A\n                    repudiandae autem quibusdam totam numquam explicabo saepe\n                    iure veritatis natus voluptas voluptate eveniet quos quasi\n                    facilis laudantium suscipit, obcaecati optio illo.\n                  </p>\n                </div>\n                <div class=\"received-message-container\">\n                  <span>TEST6</span>\n                  <p>\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit. A\n                    repudiandae autem quibusdam totam numquam explicabo saepe\n                    iure veritatis natus voluptas voluptate eveniet quos quasi\n                    facilis laudantium suscipit, obcaecati optio illo.\n                  </p>\n                </div>\n              </div>\n              <form class=\"send-container\" style=\"margin-bottom: 1px\">\n                <input\n                  type=\"text\"\n                  name=\"\"\n                  id=\"\"\n                  placeholder=\"Send a message\"\n                  style=\"width: 100%\"\n                />\n                <div>\n                  <img  src=\"/static/public/send.svg\"alt=\"\" />\n                </div>\n              </form>\n            </div>\n          </div>\n          <div class=\"social-container py-2\" id=\"social-container\">\n            <div\n              class=\"social-wrapper\"\n              id=\"social-wrapper\"\n            >\n              <div class=\"d-flex flex-column gap-2\">\n                <div class=\"social-send-info\">\n                  <div class=\"user-pic-wrapper\">\n                    <img\n                      src=\"https://picsum.photos/seed/picsum/200/300\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <h6 id=\"username\">Test1</h6>\n                </div>\n                <form class=\"social-send\" id=\"social-send-form\">\n                  <input\n                    type=\"text\"\n                    name=\"\"\n                    id=\"social-text-input\"\n                    style=\"background-color: rgba(126, 126, 126, 0.397)\"\n                    placeholder=\"What do you think\"\n                  />\n                    <div class=\"form-input-wrapper\">\n                    <label for=\"image-add\" class=\"custom-file-upload\"></label>\n                    <input\n                    type=\"file\" id=\"image-add\"\n                    src=\"{% static '/public/image.svg' %}\" alt=\"\" style=\"width: 35px\"\n                    accept=\"image/jpeg,image/png,image/gif\"\n                    >\n                <button type=\"submit\" id=\"send-button\">\n                    <img src=\"/static/public/send.svg\" alt=\"\" />\n                </button>\n                    </div>\n                </form>\n              </div>\n              <div class=\"posts-container\" id=\"posts-wrapper\">\n                <div class=\"post-container skeleton\" id=\"post-wrapper\">\n                </div>\n              </div>\n            </div>\n        </div>\n        </div>\n      </div>\n`\n    }],\n    ['home', {\n        auth_required: true,\n        url: ['/home/'],\n        html: `\n      <div\n        class=\"background container-fluid position-relative\"\n        style=\"padding: 0\"\n      >\n        <div class=\"main-buttons-wrapper\">\n          <pong-redirect class=\"profile-wrapper\" href=\"/profile\" id=\"profile-photo\">\n            <img src=\"https://picsum.photos/seed/picsum/200/300\" alt=\"\" />\n          </pong-redirect>\n          <div class=\"play-wrapper\">\n            <div\n              style=\"\n                display: flex;\n                align-items: center;\n                justify-content: center;\n              \"\n            >\n              <h1>WELCOME TO PONG</h1>\n            </div>\n            <div class=\"button-wrapper\">\n              <button class=\"play-button\">LEADERBOARD</button>\n              <button class=\"play-button\" id=\"multiplayer-button\">\n                MULTIPLAYER\n              </button>\n              <button class=\"play-button\">SINGLEPLAYER</button>\n              <pong-redirect href=\"/social/\">\n                  <button class=\"play-button\">SOCIAL</button>\n              </pong-redirect>\n            </div>\n          </div>\n        </div>\n      </div>\n\n              `\n    }],\n    ['verification',{\n        auth_required: false,\n        url: ['/verification/'],\n        html: `\n            <div class=\"background container-fluid\">\n        <div class=\"d-flex align-items-center justify-content-center h-100\">\n            <div class=\"verification-wrapper\">\n                <h2>E-mail Verification</h2>\n                \n                <p>Please type verification code sent to your e-mail address</p>\n                \n                <p>The verification code will expire in 15 minutes</p>\n                \n                <div class=\"row\">\n                    <input type=\"number\" id=\"singleDigitInput1\">\n                    <input type=\"number\" id=\"singleDigitInput2\">\n                    <input type=\"number\" id=\"singleDigitInput3\">\n                    <input type=\"number\" id=\"singleDigitInput4\">\n                    <input type=\"number\" id=\"singleDigitInput5\">\n                    <input type=\"number\" id=\"singleDigitInput6\">\n                </div>\n                \n                <button type=\"button\" id=\"verify\">Verify</button>\n                \n                <p>\n                    Didn't receive code? \n                    <a id=\"request\">Send again!</a>\n                </p>\n            </div>\n        </div>\n    </div>\n        `\n    }]\n]);\nconst routeToFile = [\n    [[\"/auth/login/\"], 'login'],\n    [[\"/auth/register/\"], 'register'],\n    [[/profile\\/[A-Za-z]+/], 'profile'],\n    [['/social/',  '/social/\\\\w+/g'], 'social'],\n    [['/home/'], 'home'],\n    [['/verification/'], 'verification']\n]\nconst requiredScripts = [\n    '/static/components/Notification.js',\n    '/static/components/Component.js',\n    '/static/components/spinner.js',\n    '/static/scripts/Request.js',\n    '/static/scripts/utils.js'\n]\n\nfunction handleStyles(value)\n{\n    let style = document.getElementById('style');\n    if(style)\n        style.remove();\n    let newStyle = document.createElement('link');\n    newStyle.rel = 'stylesheet';\n    newStyle.href = '/static/styles/' + value + '.css';\n    newStyle.id = 'style';\n    document.head.appendChild(newStyle);\n}\nfunction findRouteKey(pathName) {\n    for (let [key, value] of routes) {\n        for(let url of value.url)\n        {\n            if(url instanceof RegExp)\n            {\n                if(url.test(pathName))\n                {\n                      return key;\n                }\n\n            }\n            else if(pathName.includes(url))\n                return key;\n        }\n    }\n    return null;\n}\nfunction loadRequiredScripts() {\n    requiredScripts.forEach(script => {\n        if (!document.getElementById(script)) {\n            let newScript = document.createElement('script');\n            newScript.src = script;\n            newScript.id = script;\n            newScript.type = 'module';\n            document.body.appendChild(newScript);\n        }\n    });\n    let pathName = window.location.pathname;\n    let value = findRouteKey(pathName);\n    if(!value)\n        return;\n    if(document.getElementById('script'))\n        document.getElementById('script').remove();\n    let script = document.createElement('script');\n    script.src = '/static/scripts/' + value + '.js?ts=' + new Date().getTime();\n    script.type = 'module';\n    script.id = \"script\";\n    document.body.appendChild(script);\n    handleStyles(value)\n\n}\nfunction findRouteFile(pathName) {\n    const route = routeToFile.find(route => route[0].some(url => {\n        if (url instanceof RegExp) {\n            return url.test(pathName);\n        } else {\n            return pathName.includes(url);\n        }\n    }));\n\n    return route ? route[1] : null;\n}\nexport function loadPage(fileName) {\n    debugger\n    let data = findRouteFile(fileName);\n    const route = routes.get(data);\n    let isMatch = false;\n\nif (Array.isArray(route.url)) {\n    isMatch = route.url.some(url => {\n        if (url instanceof RegExp) {\n            return url.test(window.location.pathname);\n        } else {\n            return window.location.pathname.includes(url);\n        }\n    });\n} else if (route.url instanceof RegExp) {\n    isMatch = route.url.test(window.location.pathname);\n} else {\n    isMatch = window.location.pathname.includes(route.url);\n}\n\nif (!isMatch) {\n    history.pushState({}, '', window.location.origin + route.url);\n}\n    let content = document.getElementById('main');\n    content.innerHTML = route.html;\n    App();\n}\n\n\nfunction checkForAuth()\n{\n    if(getCookie('tokens'))\n        return;\n    const pathName = window.location.pathname;\n    let value = findRouteKey(pathName);\n    if(!value)\n        return;\n    const route = routes.get(value);\n    console.log(route)\n    if(route.auth_required === true)\n        loadPage('/auth/login/');\n\n}\nexport function assignRouting()\n{\n    let elements = document.querySelectorAll(\"pong-redirect\");\n    for(let element of elements)\n    {\n        element.addEventListener('click', function(event) {\n            event.preventDefault();\n            let fileName = element.getAttribute('href');\n            history.pushState({to: fileName}, '', window.location.origin + fileName);\n            loadPage(fileName);\n        });\n    }\n}\nconst App = async () => {\n    loadRequiredScripts();\n    checkForAuth();\n    assignRouting()\n}\nwindow.addEventListener('popstate', (event ) => {\n    let pathName = window.location.pathname;\n    loadPage(pathName);\n    }\n);\n\ndocument.addEventListener('DOMContentLoaded', App);
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/Backend/static/scripts/spa.js b/Backend/static/scripts/spa.js
---- a/Backend/static/scripts/spa.js	(revision 8541ec7fb11979a88d2f8e05eaa16a38408e1955)
-+++ b/Backend/static/scripts/spa.js	(date 1712283364686)
-@@ -1,5 +1,5 @@
--export const API_URL = 'http://localhost:8000/api/v1';
--export const BASE_URL = 'http://localhost:8000';
-+export const API_URL = 'http://127.0.0.1:8000/api/v1';
-+export const BASE_URL = 'http://127.0.0.1:8000';
- export function setCookie(name,value,days) {
-     let expires = "";
-     if (days) {
-Index: API/API/settings.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>\"\"\"\nDjango settings for API project.\n\nGenerated by 'django-admin startproject' using Django 5.0.3.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/5.0/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/5.0/ref/settings/\n\"\"\"\nimport os\nfrom pathlib import Path\n\nfrom dotenv import load_dotenv\nimport datetime\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\nload_dotenv()\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = '0a4fd7e3567eab20bab2f2d6682ea96d0d865050bfcde9c293aa7f9ec48bce55'\n\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = ['*']\nCORS_ALLOWED_ORIGINS = [\n    \"http://localhost:3000\",\n]\nCSRF_TRUSTED_ORIGINS = [\n    \"http://localhost:3000\",\n]\nCORS_ALLOW_CREDENTIALS = True\n# Application definition\n\nINSTALLED_APPS = [\n    'daphne',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'corsheaders',\n    \"Apps.Auth.apps.AuthConfig\",\n    \"Apps.Profile.apps.ProfileConfig\",\n    \"Apps.Tournament.apps.TournamentConfig\",\n    'Apps.SocialMedia.apps.SocialmediaConfig',\n    \"Apps.Chat.apps.ChatConfig\",\n    \"Apps.UserStatus.apps.OnlineusersConfig\"\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'API.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates']\n        ,\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'API.wsgi.application'\nASGI_APPLICATION = 'API.asgi.application'\n\nCHANNEL_LAYERS = {\n    \"default\": {\n        \"BACKEND\": \"channels_redis.core.RedisChannelLayer\",\n        \"CONFIG\": {\n            \"hosts\": [(\"127.0.0.1\", 6379)],\n        },\n    },\n}\n\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    )\n}\n\n\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\n\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.postgresql\",\n        \"NAME\": os.getenv('PG_DB'),\n        \"USER\": os.getenv('PG_USER'),\n        \"PASSWORD\": os.getenv('PG_PASSWORD'),\n        \"HOST\": os.getenv('PG_HOST'),\n        \"PORT\": os.getenv('PG_PORT'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/5.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'Europe/Istanbul'\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\n\nSTATIC_URL = 'static/'\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': datetime.timedelta(days=1),\n    'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=50),\n    'ROTATE_REFRESH_TOKENS': True,\n    'BLACKLIST_AFTER_ROTATION': True,\n    'UPDATE_LAST_LOGIN': False,\n    'ALGORITHM': 'HS256',\n    'VERIFYING_KEY': None,\n    'AUDIENCE': None,\n    'ISSUER': None,\n    'JWK_URL': None,\n    'LEEWAY': 0,\n    'AUTH_HEADER_TYPES': ('Bearer',),\n    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',\n    'USER_ID_FIELD': 'id',\n    'USER_ID_CLAIM': 'user_id',\n    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',\n    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),\n    'TOKEN_TYPE_CLAIM': 'token_type',\n    'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',\n    'TOKEN_EXPIRED_CALLBACK': 'token_expired_callback',\n    'JTI_CLAIM': 'jti',\n    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',\n    'SLIDING_TOKEN_LIFETIME': datetime.timedelta(minutes=5),\n    'SLIDING_TOKEN_REFRESH_LIFETIME': datetime.timedelta(days=1),\n}\n\n\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_USE_TLS = True\nEMAIL_PORT = 587\nEMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_USE_SSL = False\nCACHES = {\n    'default': {\n        \"BACKEND\": \"django.core.cache.backends.locmem.LocMemCache\",\n        'LOCATION': 'unique-snowflake',\n    }\n}\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media/images'\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/API/API/settings.py b/API/API/settings.py
---- a/API/API/settings.py	(revision 8541ec7fb11979a88d2f8e05eaa16a38408e1955)
-+++ b/API/API/settings.py	(date 1712283364688)
-@@ -32,9 +32,11 @@
- ALLOWED_HOSTS = ['*']
- CORS_ALLOWED_ORIGINS = [
-     "http://localhost:3000",
-+    "http://127.0.0.1:3000"
- ]
- CSRF_TRUSTED_ORIGINS = [
-     "http://localhost:3000",
-+    "http://127.0.0.1:3000"
- ]
- CORS_ALLOW_CREDENTIALS = True
- # Application definition
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_5_04_2024,_05_16_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_04_2024,_05_16_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_04_2024,_05_16_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_04_2024,_05_16_[Changes]/shelved.patch	
+++ /dev/null	
@@ -1,58 +0,0 @@
-Index: Backend/static/scripts/profile.js
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import BaseComponent from \"../components/Component.js\";\nimport {API_URL, BASE_URL, getCookie, loadPage} from \"./spa.js\";\nimport {notify} from \"../components/Notification.js\";\nimport {request} from \"./Request.js\";\nimport {escapeHTML} from \"./utils.js\";\nclass History extends BaseComponent\n{\n    constructor(state,parentElement = null) {\n        super(state,parentElement);\n        this.handleHTML()\n    }\n    handleHTML()\n    {\n        return `\n            <div class=\"histories-wrapper\">\n            ${this.state.histories.map(history => `\n              <div class=\"history-wrapper\">\n                <div class=\"friend-info\">\n                  <div class=\"history-type\"><h5>1v1</h5></div>\n                </div>\n                <div class=\"history-data\">\n                  <h5>BSAMLI</h5>\n                  <h5>VS</h5>\n                  <h5>OFIRAT</h5>\n                </div>\n                <div class=\"history-score\">\n                  <h5>4</h5>\n                  <h5>-</h5>\n                  <h5>0</h5>\n                </div>\n                <div>\n                  <h5>1 DAY AGO</h5>\n                </div>\n              </div>\n            `)}\n            </div>\n          </div>\n`\n    }\n    render() {\n        this.parentElement.innerHTML = this.handleHTML();\n    }\n}\nclass Stats extends BaseComponent {\n    constructor(state, parentElement = null) {\n        super(state, parentElement);\n        this.html = this.handleHTML();\n    }\n\n    handleHTML() {\n    console.log(this.state)\n    return `\n    <div class=\"stats-wrapper\">\n    <div class=\"stats-row\">\n        <div class=\"stats-item\">\n            <h3>Total Games</h3>\n            <p class=\"stats-value\">${this.state.statsInfo.total_games}</p>\n        </div>\n        <div class=\"stats-item\">\n            <h3>Total Win</h3>\n            <p class=\"stats-value\">${this.state.statsInfo.total_wins}</p>\n        </div>\n    </div>\n    <div class=\"stats-row\">\n        <div class=\"stats-item\">\n            <h3>Total Losses</h3>\n            <p class=\"stats-value\">${this.state.statsInfo.total_losses}</p>\n        </div>\n        <div class=\"stats-item\">\n            <h3>Points</h3>\n            <p class=\"stats-value\">${this.state.statsInfo.points}</p>\n        </div>\n    </div>\n    <div class=\"stats-row\">\n        <div class=\"stats-item\">\n            <h3>Win Rate</h3>\n            <p class=\"stats-value\">%${((parseInt(this.state.statsInfo.total_wins) / (parseInt(this.state.statsInfo.total_wins) + parseInt(this.state.statsInfo.total_losses))) * 100).toFixed(2)}</p>\n        </div>\n        <div class=\"stats-item\">\n            <h3 href=\"leaderboard\" class=\"stats-value\">Rank</>\n            <p class=\"stats-value\">#3</p>\n        </div>\n    </div>\n</div>\n\n    `;\n}\n\n    render() {\n        this.parentElement.innerHTML = this.html;\n    }   \n}\nclass Friends extends BaseComponent\n{\n    constructor(state,parentElement = null) {\n        super(state,parentElement);\n        this.html = this.handleHTML()\n    }\n    handleHTML()\n    {\n        return `\n            <div class=\"friends-wrapper\">\n            ${this.state.friends.map(friend => `\n              <div class=\"friend-wrapper\">\n                <div class=\"friend-info\">\n                  <div class=\"friend-image\">\n                    <img src=\"https://picsum.photos/id/237/200/300\" alt=\"\" />\n                  </div>\n                  <div class=\"friend-data\">\n                    <h6>${friend.user.first_name.length  > 0 ?escapeHTML(friend.user.first_name) : \"No name is set for this user\" }</h6>\n                    <span>${friend.nickname.length > 0 ? friend.nickname: friend.user.username}</span>\n                  </div>\n                </div>\n                <div class=\"friend-more\">\n                  <div><img src=\"/static/public/image.svg\" alt=\"\" /></div>\n                  <div><img src=\"/static/public/chat-bubble.svg\"/></div>\n                  <div><img src=\"/static/public/more.svg\" alt=\"\" /></div>\n                </div>\n              </div>\n            `).join('')}\n          </div>\n        `\n    }\n    setState(newState) {\n        this.state = { ...this.state, ...newState };\n        this.render();\n    }\n}\n\nclass ProfileInfo extends BaseComponent\n{\n    constructor(state,parentElement = null) {\n        super(state,parentElement);\n    }\n    handleEditHTML()\n    {\n        const {nickname, first_name, last_name,bio,profile_picture} = this.state.profile;\n        return `\n        <div class=\"profile-info-wrapper\">\n                <div class=\"profile-edit\">\n                    <button class=\"pong-button\" id=\"edit-button\">\n                X\n                    </button>\n                </div>\n        <form style=\"display: flex; flex-direction: column; align-items: center\" id=\"update-form\">\n              <div class=\"profile-photo\">\n                <img\n                  src=\"${BASE_URL}${profile_picture}\"\n                  alt=\"\"\n                  class=\"\"\n                />\n              </div>\n              <div>\n                <input class=\"transparent-input\" id=\"profile-nickname\" value=\"${nickname ? nickname: \"no nickname is set!\"}\"/>\n                <input class=\"transparent-input\" id=\"profile-firstname\"  value=\"${first_name ? first_name: \"no first name is set\"}\">\n              </div>\n              <div>\n                <textarea id=\"profile-bio\" cols=\"30\" rows=\"5\"  class=\"transparent-input\">${bio ? bio : 'No bio available'}</textarea>  \n              </div>\n        <button class=\"pong-button\" id=\"save-button\" type=\"submit\">save</button>\n            </form>\n        </div>\n        `\n    }\n    handleHTML()\n    {\n        const {nickname, first_name, last_name,bio,profile_picture} = this.state.profile;\n        return `\n        <div class=\"profile-info-wrapper\">\n                <div class=\"profile-edit\">\n                    <button class=\"pong-button\" id=\"edit-button\">\n                    <img src=\"/static/public/edit.svg\" alt=\"\">\n                    </button>\n                </div>\n              <div class=\"profile-photo\">\n                <img\n                  src=\"${BASE_URL}${profile_picture}\"\n                  alt=\"\"\n                  class=\"\"\n                />\n              </div>\n              <div>\n                <h1>${nickname ? escapeHTML(nickname): \"no nickname is set!\"}</h1>\n                <span>${first_name ? escapeHTML(first_name): \"no first name is set\"}</span>\n              </div>\n              <div>\n                <p>\n                ${bio ? escapeHTML(bio): 'No bio available'}\n                </p>\n              </div>`\n    }\n    updateProfile = async (formData) => {\n        const tokens = JSON.parse(getCookie('tokens'));\n        try\n        {\n            let response = await request(`${API_URL}/profile`,{\n                method:'PUT',\n                headers:{\n                    'Content-Type':'application/json',\n                    'Authorization':`Bearer ${tokens.access}`\n                },\n                body: JSON.stringify(formData)\n            });\n            notify('Profile updated', 3, 'success');\n            this.setState({...this.state, profile:response});\n        }\n        catch(error)\n        {\n            console.error('Error:', error);\n            notify('Error updating profile', 3, 'error')\n        }\n    }\n    render() {\n        this.parentElement.innerHTML = this.state.isEditing ? this.handleEditHTML() : this.handleHTML();\n        const updateForm = document.getElementById('update-form');\n        if(updateForm)\n        {\n            updateForm.addEventListener('submit', async (e) => {\n                e.preventDefault()\n                let formData = {\n                    nickname: document.getElementById('profile-nickname').value,\n                    bio: document.getElementById('profile-bio').value\n                }\n                await this.updateProfile(formData);\n            });\n        }\n    }\n    setState(newState) {\n        this.state = { ...this.state, ...newState };\n        this.render();\n        document.getElementById('edit-button').addEventListener('click', () => {\n            this.setState({...this.state, isEditing: !this.state.isEditing});\n        });\n    }\n}\nasync function fetchProfile()\n{\n    const pathName = window.location.pathname;\n    const pathParts = pathName.split('/');\n    const nickname = pathParts[pathParts.length - 1];\n    const tokens = JSON.parse(getCookie('tokens'));\n    try\n    {\n    let data = await request(`${API_URL}/profile/`,{\n        method:'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${tokens.access}`\n        }\n    });\n        console.log(data)\n    const profileParentElement = document.getElementById('profile-info');\n    const profile = new ProfileInfo({profile:data,isEditing:false},profileParentElement);\n    profile.render();\n    const editButton = document.getElementById('edit-button');\n        editButton.addEventListener('click', () => {\n        profile.setState({...profile.state, isEditing: !profile.state.isEditing});\n    });\n    }\n    catch(error)\n    {\n        console.error('Error:', error);\n        notify('Error fetching profile', 3, 'error')\n        loadPage('/home');\n    }\n}\nasync function assignDataRouting()\n{\n    const historyButton = document.getElementById('history-button');\n    const friendsButton  = document.getElementById('friends-button');\n    const statsButton = document.getElementById('stats-button');\n    historyButton.addEventListener('click', (e) => {\n        history.replaceState(null, null, '#history')\n        handleRouting()\n    });\n    friendsButton.addEventListener('click', (e) => {\n        history.replaceState(null, null, '#friends')\n        handleRouting()\n    });\n    statsButton.addEventListener('click', (e) => {\n        history.replaceState(null, null, '#stats')\n        handleRouting()\n    });\n}\n\nasync function fetchStats()\n{\n    try{\n        let response = await request(`${API_URL}/profile/stats`,{\n            method:'GET',\n            headers:{\n                'Content-Type':'application/json',\n                'Authorization':`Bearer ${JSON.parse(getCookie('tokens')).access}`\n            }\n        });\n        return response;\n    }\n    catch (error)\n    {\n        console.error('Error:', error);\n        notify('Error fetching stats', 3, 'error')\n    }\n}\n\nasync function fetchFriends()\n{\n    try{\n        let data = await request(`${API_URL}/profile/friends`,{\n            method:'GET',\n            headers:{\n                'Content-Type':'application/json',\n                'Authorization':`Bearer ${JSON.parse(getCookie('tokens')).access}`\n        }\n    });\n        return data;\n    }\n    catch (error)\n    {\n        console.error('Error:', error);\n        notify('Error fetching friends', 3, 'error')\n    }\n}\nasync function handleRouting()\n{\n    const hash = location.hash;\n    const parentElement = document.getElementById('data-wrapper');\n    if(hash === '#history')\n    {\n        const history = new History({histories: [1]},parentElement);\n        history.render();\n    }\n    if(hash === '#friends')\n    {\n        let data = await fetchFriends();\n        const friends = new Friends({friends:data},parentElement);\n        friends.render();\n    }\n    if(hash === '#stats')\n    {\n        let data = await fetchStats();\n        const statsInfo = new Stats({statsInfo:data}, parentElement);\n        statsInfo.render();\n    }\n}\n\nconst App = async () => {\n    await fetchProfile();\n    await assignDataRouting();\n    await handleRouting();\n}\n\nApp().catch((error) => console.error(error));
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/Backend/static/scripts/profile.js b/Backend/static/scripts/profile.js
---- a/Backend/static/scripts/profile.js	(revision 8541ec7fb11979a88d2f8e05eaa16a38408e1955)
-+++ b/Backend/static/scripts/profile.js	(date 1712268152918)
-@@ -135,6 +135,7 @@
-     handleEditHTML()
-     {
-         const {nickname, first_name, last_name,bio,profile_picture} = this.state.profile;
-+        print(this.state.profile.nickname)
-         return `
-         <div class="profile-info-wrapper">
-                 <div class="profile-edit">
-Index: Backend/static/scripts/spa.js
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>export const API_URL = 'http://localhost:8000/api/v1';\nexport const BASE_URL = 'http://localhost:8000';\nexport function setCookie(name,value,days) {\n    let expires = \"\";\n    if (days) {\n        const date = new Date();\n        date.setTime(date.getTime() + (days*24*60*60*1000));\n        expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\n}\nexport function getCookie(name) {\n    const nameEQ = name + \"=\";\n    const ca = document.cookie.split(';');\n    for(let i=0; i < ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0)===' ') c = c.substring(1,c.length);\n        if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length,c.length);\n    }\n    return null;\n}\nconst routes = new Map([\n    ['login', {\n    auth_required:false,\n    url:[\"/auth/login/\"],\n    html: `\n    <div class=\"background container-fluid\">\n        <div class=\"d-flex align-items-center justify-content-center h-100\">\n            <form class=\"login-wrapper p-5 gap-2\" id=\"login-form\">\n                <div\n                        style=\"\n                display: flex;\n                align-items: center;\n                justify-content: center;\n              \"\n                >\n                    <h1 style=\"color: white\">LOGIN</h1>\n                </div>\n                <div>\n                    <input\n                            type=\"text\"\n                            class=\"login-input p-2\"\n                            id=\"username\"\n                            placeholder=\"USERNAME\"\n                    />\n                </div>\n                <div>\n                    <input\n                            type=\"text\"\n                            class=\"login-input p-2\"\n                            id=\"password\"\n                            placeholder=\"PASSWORD\"\n                    />\n                </div>\n                <div\n                        style=\"\n                display: flex;\n                align-items: center;\n                justify-content: center;\n              \"\n                >\n                    <div>\n\n                        <button class=\"login-button\" type=\"submit\">LOGIN</button>\n                        <pong-redirect href=\"register\">\n                            <button class=\"login-button\" type=\"button\">REGISTER</button>\n                        </pong-redirect>\n\n                    </div>\n                </div>\n                <button class=\"ecole-login-button\">\n                    Login with 42\n                    <div>\n                        <img src=\"/static/public/42.svg\" alt=\"\"/>\n                    </div>\n                </button>\n            </form>\n        </div>\n    </div>`\n    }],\n    ['register', {\n        auth_required: false,\n        url: [\"/auth/register/\"],\n        html: `\n              <div class=\"background container-fluid\">\n            <div class=\"d-flex align-items-center justify-content-center h-100\">\n              <form class=\"register-wrapper p-5 gap-2\" id=\"register-form\">{% csrf_token %}\n                <div\n                  style=\"\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                  \"\n                >\n                  <h1 style=\"color: white\">REGISTER</h1>\n                </div>\n                <div class=\"register-input-wrapper\">\n                  <label for=\"username\">username</label>\n                  <input\n                    type=\"text\"\n                    class=\"register-input p-2\"\n                    placeholder=\"USERNAME\"\n                    id=\"username\"\n                  />\n                </div>\n                <div class=\"register-password\">\n                  <div class=\"register-input-wrapper\">\n                    <label for=\"password\">password</label>\n                    <input\n                      type=\"text\"\n                      class=\"register-input p-2\"\n                      placeholder=\"PASSWORD\"\n                      id=\"password\"\n                      required\n                    />\n                  </div>\n                  <div class=\"register-input-wrapper\">\n                    <label for=\"password\">Re enter your password</label>\n                    <input\n                      type=\"text\"\n                      class=\"register-input p-2\"\n                      id=\"password2\"\n                      required\n                    />\n                  </div>\n                </div>\n                <div class=\"register-input-wrapper\">\n                  <label for=\"Email\">Email</label>\n                  <input\n                    type=\"text\"\n                    class=\"register-input p-2\"\n                    placeholder=\"EMAIL\"\n                    id=\"email\"\n                    required\n                  />\n                </div>\n                <div\n                  style=\"\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    gap: 10px;\n                    width: 100%;\n                  \"\n                >\n                  <div>\n                    <button class=\"register-button\" id=\"register-button\">\n                        REGISTER\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n    `\n    }],\n    ['profile', {\n        auth_required: true,\n        url: [/profile\\/[A-Za-z]+/],\n        html: `\n              <div\n        class=\"background container-fluid social-background\"\n        style=\"padding: 0\"\n      >\n        <div class=\"profile-wrapper\">\n          <div class=\"profile-info\" id=\"profile-info\">\n            <div class=\"profile-info-wrapper\">\n                <div class=\"profile-edit\">\n                    <button class=\"pong-button\" id=\"edit-button\">\n                        <img src=\"/static/public/edit.svg\" alt=\"\"></button>\n                </div>\n              <div class=\"profile-photo skeleton\"></div>\n              <div class=\"skeleton profile-data\">\n                <h1></h1>\n                <span></span>\n              </div>\n              <div class=\"profile-bio skeleton\">\n                <p></p>\n              </div>\n            </div>\n          </div>\n          <div class=\"profile-data\">\n            <div class=\"data-headers\">\n              <button class=\"header-wrapper\" id=\"history-button\"><span>MATCH HISTORY</span></button>\n              <button class=\"header-wrapper\" id=\"friends-button\"><span> FRIENDS </span></button>\n              <button class=\"header-wrapper\" id=\"stats-button\"><span>STATS</span></button>\n            </div>\n          <div id=\"data-wrapper\">\n                <div class=\"friends-wrapper\" style=\"display: none\">\n              <div class=\"friend-wrapper\">\n                <div class=\"friend-info\">\n                  <div class=\"friend-image\">\n                    <img src=\"https://picsum.photos/id/237/200/300\" alt=\"\" />\n                  </div>\n                  <div class=\"friend-data\">\n                    <h6>NAME</h6>\n                    <span>First Last name</span>\n                  </div>\n                </div>\n                <div class=\"friend-more\">\n                  <div><img src=\"/public/image.svg\" alt=\"\" /></div>\n                  <div><img src=\"/public/chat-bubble.svg\" alt=\"\" /></div>\n                  <div><img src=\"/public/more.svg\" alt=\"\" /></div>\n                </div>\n              </div>\n              <div class=\"friend-wrapper\">\n                <div class=\"friend-info\">\n                  <div class=\"friend-image\">\n                    <img src=\"https://picsum.photos/id/237/200/300\" alt=\"\" />\n                  </div>\n                  <div class=\"friend-data\">\n                    <h6>NAME</h6>\n                    <span>First Last name</span>\n                  </div>\n                </div>\n                <div class=\"friend-more\">\n                  <div><img src=\"/public/image.svg\" alt=\"\" /></div>\n                  <div><img src=\"/public/chat-bubble.svg\" alt=\"\" /></div>\n                  <div><img src=\"/public/more.svg\" alt=\"\" /></div>\n                </div>\n              </div>\n            </div>\n            <div class=\"histories-wrapper\">\n              <div class=\"history-wrapper\">\n                <div class=\"friend-info\">\n                  <div class=\"history-type\"><h5>1v1</h5></div>\n                </div>\n                <div class=\"history-data\">\n                  <h5>BSAMLI</h5>\n                  <h5>VS</h5>\n                  <h5>OFIRAT</h5>\n                </div>\n                <div class=\"history-score\">\n                  <h5>4</h5>\n                  <h5>-</h5>\n                  <h5>0</h5>\n                </div>\n                <div>\n                  <h5>1 DAY AGO</h5>\n                </div>\n              </div>\n              <div class=\"history-wrapper\">\n                <div class=\"friend-info\">\n                  <div class=\"history-type\"><h5>1v1</h5></div>\n                </div>\n                <div class=\"history-data\">\n                  <h5>BSAMLI</h5>\n                  <h5>VS</h5>\n                  <h5>OFIRAT</h5>\n                </div>\n                <div class=\"history-score\">\n                  <h5>4</h5>\n                  <h5>-</h5>\n                  <h5>0</h5>\n                </div>\n                <div>\n                  <h5>1 DAY AGO</h5>\n                </div>\n              </div>\n              <div class=\"history-wrapper\">\n                <div>\n                  <h5>Tournament</h5>\n                </div>\n                <div class=\"history-data\">\n                  <h5>BSAMLI</h5>\n                  <h5>VS</h5>\n                  <h5>OFIRAT</h5>\n                </div>\n                <div class=\"history-score\">\n                  <h5>4</h5>\n                  <h5>-</h5>\n                  <h5>0</h5>\n                </div>\n                <div>\n                  <h5>1 DAY AGO</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n          </div>\n        </div>\n      </div>\n`\n    }],\n    ['social',{\n    auth_required: true,\n    url: ['/social/',  '/social/\\\\w+/g'],\n    html: `\n      <ul class=\"chat-options\" id=\"chat-options\">\n        <li>Invite to Pong</li>\n        <li>Go To Profile</li>\n      </ul>\n          <div\n        class=\"background container-fluid social-background\"\n        style=\"padding: 0\"\n      >\n        <div class=\"d-flex h-100\">\n          <div class=\"d-flex position-relative\">\n            <div id=\"user-chat-friends\">\n                <div class=\"users-wrapper\">\n                <div>\n                  <div class=\"chat-send-wrapper\">\n                    <h2>SEARCH...</h2>\n                    <input type=\"text\" placeholder=\"SEARCH A NAME\" id=\"friend-search-input\" />\n                </div>\n              </div>\n              <div class=\"user-data-wrapper loading\" id=\"user-data-wrapper\">\n              <div class=\"lds-ring\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            </div>\n              </div>\n            </div>\n            </div>\n            <div class=\"chat-container\">\n              <div class=\"active-user-wrapper\">\n                <div class=\"user-info\">\n                  <div class=\"user-pic-wrapper\">\n                    <img\n                      src=\"https://picsum.photos/seed/picsum/200/300\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <div class=\"active-user-info-wrapper\">\n                    <h6>test1</h6>\n                    <span>active now</span>\n                    <div class=\"spotify-info\">\n                      <img src=\"/static/public/music.svg\" alt=\"\" style=\"width: 20px\" />\n                      <span>Currently listening test123</span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"d-flex\">\n                  <img src=\"/static/public/more.svg\" alt=\"\" style=\"width: 50px\" />\n                  <div id=\"chat-close-button\" style=\"cursor: pointer\">\n                    <img  src=\"/static/public/go-back.svg\" alt=\"\" />\n                  </div>\n                </div>\n              </div>\n              <div class=\"conversation-wrapper\">\n                <div class=\"received-message-container\">\n                  <span>TEST6</span>\n                  <p>\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit. A\n                    repudiandae autem quibusdam totam numquam explicabo saepe\n                    iure veritatis natus voluptas voluptate eveniet quos quasi\n                    facilis laudantium suscipit, obcaecati optio illo.\n                  </p>\n                </div>\n                <div class=\"sent-message-container\">\n                  <span>TEST2</span>\n                  <p>\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                    Quis cumque maxime iste odio ratione aliquid nisi commodi\n                    asperiores, quo nihil sint, voluptate iure vel accusamus\n                    odit incidunt porro debitis illo!\n                  </p>\n                </div>\n                <div class=\"sent-message-container\">\n                  <span>lorem</span>\n                  <p>\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                    Quis cumque maxime iste odio ratione aliquid nisi commodi\n                    asperiores, quo nihil sint, voluptate iure vel accusamus\n                    odit incidunt porro debitis illo!\n                  </p>\n                </div>\n                <div class=\"sent-message-container\">\n                  <span>TEST2</span>\n                  <p>\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                    Veniam accusantium fugit ad magnam, odio numquam id quidem\n                    saepe, deserunt consequuntur commodi animi dolor error\n                    debitis sed natus minus. Tempora, laborum?\n                  </p>\n                </div>\n                <div class=\"received-message-container\">\n                  <span>TEST6</span>\n                  <p>\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit. A\n                    repudiandae autem quibusdam totam numquam explicabo saepe\n                    iure veritatis natus voluptas voluptate eveniet quos quasi\n                    facilis laudantium suscipit, obcaecati optio illo.\n                  </p>\n                </div>\n                <div class=\"received-message-container\">\n                  <span>TEST6</span>\n                  <p>\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit. A\n                    repudiandae autem quibusdam totam numquam explicabo saepe\n                    iure veritatis natus voluptas voluptate eveniet quos quasi\n                    facilis laudantium suscipit, obcaecati optio illo.\n                  </p>\n                </div>\n              </div>\n              <form class=\"send-container\" style=\"margin-bottom: 1px\">\n                <input\n                  type=\"text\"\n                  name=\"\"\n                  id=\"\"\n                  placeholder=\"Send a message\"\n                  style=\"width: 100%\"\n                />\n                <div>\n                  <img  src=\"/static/public/send.svg\"alt=\"\" />\n                </div>\n              </form>\n            </div>\n          </div>\n          <div class=\"social-container py-2\" id=\"social-container\">\n            <div\n              class=\"social-wrapper\"\n              id=\"social-wrapper\"\n            >\n              <div class=\"d-flex flex-column gap-2\">\n                <div class=\"social-send-info\">\n                  <div class=\"user-pic-wrapper\">\n                    <img\n                      src=\"https://picsum.photos/seed/picsum/200/300\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <h6 id=\"username\">Test1</h6>\n                </div>\n                <form class=\"social-send\" id=\"social-send-form\">\n                  <input\n                    type=\"text\"\n                    name=\"\"\n                    id=\"social-text-input\"\n                    style=\"background-color: rgba(126, 126, 126, 0.397)\"\n                    placeholder=\"What do you think\"\n                  />\n                    <div class=\"form-input-wrapper\">\n                    <label for=\"image-add\" class=\"custom-file-upload\"></label>\n                    <input\n                    type=\"file\" id=\"image-add\"\n                    src=\"{% static '/public/image.svg' %}\" alt=\"\" style=\"width: 35px\"\n                    accept=\"image/jpeg,image/png,image/gif\"\n                    >\n                <button type=\"submit\" id=\"send-button\">\n                    <img src=\"/static/public/send.svg\" alt=\"\" />\n                </button>\n                    </div>\n                </form>\n              </div>\n              <div class=\"posts-container\" id=\"posts-wrapper\">\n                <div class=\"post-container skeleton\" id=\"post-wrapper\">\n                </div>\n              </div>\n            </div>\n        </div>\n        </div>\n      </div>\n`\n    }],\n    ['home', {\n        auth_required: true,\n        url: ['/home/'],\n        html: `\n      <div\n        class=\"background container-fluid position-relative\"\n        style=\"padding: 0\"\n      >\n        <div class=\"main-buttons-wrapper\">\n          <pong-redirect class=\"profile-wrapper\" href=\"/profile\" id=\"profile-photo\">\n            <img src=\"https://picsum.photos/seed/picsum/200/300\" alt=\"\" />\n          </pong-redirect>\n          <div class=\"play-wrapper\">\n            <div\n              style=\"\n                display: flex;\n                align-items: center;\n                justify-content: center;\n              \"\n            >\n              <h1>WELCOME TO PONG</h1>\n            </div>\n            <div class=\"button-wrapper\">\n              <button class=\"play-button\">LEADERBOARD</button>\n              <button class=\"play-button\" id=\"multiplayer-button\">\n                MULTIPLAYER\n              </button>\n              <button class=\"play-button\">SINGLEPLAYER</button>\n              <pong-redirect href=\"/social/\">\n                  <button class=\"play-button\">SOCIAL</button>\n              </pong-redirect>\n            </div>\n          </div>\n        </div>\n      </div>\n\n              `\n    }],\n    ['verification',{\n        auth_required: false,\n        url: ['/verification/'],\n        html: `\n            <div class=\"background container-fluid\">\n        <div class=\"d-flex align-items-center justify-content-center h-100\">\n            <div class=\"verification-wrapper\">\n                <h2>E-mail Verification</h2>\n                \n                <p>Please type verification code sent to your e-mail address</p>\n                \n                <p>The verification code will expire in 15 minutes</p>\n                \n                <div class=\"row\">\n                    <input type=\"number\" id=\"singleDigitInput1\">\n                    <input type=\"number\" id=\"singleDigitInput2\">\n                    <input type=\"number\" id=\"singleDigitInput3\">\n                    <input type=\"number\" id=\"singleDigitInput4\">\n                    <input type=\"number\" id=\"singleDigitInput5\">\n                    <input type=\"number\" id=\"singleDigitInput6\">\n                </div>\n                \n                <button type=\"button\" id=\"verify\">Verify</button>\n                \n                <p>\n                    Didn't receive code? \n                    <a id=\"request\">Send again!</a>\n                </p>\n            </div>\n        </div>\n    </div>\n        `\n    }]\n]);\nconst routeToFile = [\n    [[\"/auth/login/\"], 'login'],\n    [[\"/auth/register/\"], 'register'],\n    [[/profile\\/[A-Za-z]+/], 'profile'],\n    [['/social/',  '/social/\\\\w+/g'], 'social'],\n    [['/home/'], 'home'],\n    [['/verification/'], 'verification']\n]\nconst requiredScripts = [\n    '/static/components/Notification.js',\n    '/static/components/Component.js',\n    '/static/components/spinner.js',\n    '/static/scripts/Request.js',\n    '/static/scripts/utils.js'\n]\n\nfunction handleStyles(value)\n{\n    let style = document.getElementById('style');\n    if(style)\n        style.remove();\n    let newStyle = document.createElement('link');\n    newStyle.rel = 'stylesheet';\n    newStyle.href = '/static/styles/' + value + '.css';\n    newStyle.id = 'style';\n    document.head.appendChild(newStyle);\n}\nfunction findRouteKey(pathName) {\n    for (let [key, value] of routes) {\n        for(let url of value.url)\n        {\n            if(url instanceof RegExp)\n            {\n                if(url.test(pathName))\n                {\n                      return key;\n                }\n\n            }\n            else if(pathName.includes(url))\n                return key;\n        }\n    }\n    return null;\n}\nfunction loadRequiredScripts() {\n    requiredScripts.forEach(script => {\n        if (!document.getElementById(script)) {\n            let newScript = document.createElement('script');\n            newScript.src = script;\n            newScript.id = script;\n            newScript.type = 'module';\n            document.body.appendChild(newScript);\n        }\n    });\n    let pathName = window.location.pathname;\n    let value = findRouteKey(pathName);\n    if(!value)\n        return;\n    if(document.getElementById('script'))\n        document.getElementById('script').remove();\n    let script = document.createElement('script');\n    script.src = '/static/scripts/' + value + '.js?ts=' + new Date().getTime();\n    script.type = 'module';\n    script.id = \"script\";\n    document.body.appendChild(script);\n    handleStyles(value)\n\n}\nfunction findRouteFile(pathName) {\n    const route = routeToFile.find(route => route[0].some(url => {\n        if (url instanceof RegExp) {\n            return url.test(pathName);\n        } else {\n            return pathName.includes(url);\n        }\n    }));\n\n    return route ? route[1] : null;\n}\nexport function loadPage(fileName) {\n    debugger\n    let data = findRouteFile(fileName);\n    const route = routes.get(data);\n    let isMatch = false;\n\nif (Array.isArray(route.url)) {\n    isMatch = route.url.some(url => {\n        if (url instanceof RegExp) {\n            return url.test(window.location.pathname);\n        } else {\n            return window.location.pathname.includes(url);\n        }\n    });\n} else if (route.url instanceof RegExp) {\n    isMatch = route.url.test(window.location.pathname);\n} else {\n    isMatch = window.location.pathname.includes(route.url);\n}\n\nif (!isMatch) {\n    history.pushState({}, '', window.location.origin + route.url);\n}\n    let content = document.getElementById('main');\n    content.innerHTML = route.html;\n    App();\n}\n\n\nfunction checkForAuth()\n{\n    if(getCookie('tokens'))\n        return;\n    const pathName = window.location.pathname;\n    let value = findRouteKey(pathName);\n    if(!value)\n        return;\n    const route = routes.get(value);\n    console.log(route)\n    if(route.auth_required === true)\n        loadPage('/auth/login/');\n\n}\nexport function assignRouting()\n{\n    let elements = document.querySelectorAll(\"pong-redirect\");\n    for(let element of elements)\n    {\n        element.addEventListener('click', function(event) {\n            event.preventDefault();\n            let fileName = element.getAttribute('href');\n            history.pushState({to: fileName}, '', window.location.origin + fileName);\n            loadPage(fileName);\n        });\n    }\n}\nconst App = async () => {\n    loadRequiredScripts();\n    checkForAuth();\n    assignRouting()\n}\nwindow.addEventListener('popstate', (event ) => {\n    let pathName = window.location.pathname;\n    loadPage(pathName);\n    }\n);\n\ndocument.addEventListener('DOMContentLoaded', App);
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/Backend/static/scripts/spa.js b/Backend/static/scripts/spa.js
---- a/Backend/static/scripts/spa.js	(revision 8541ec7fb11979a88d2f8e05eaa16a38408e1955)
-+++ b/Backend/static/scripts/spa.js	(date 1712268517071)
-@@ -1,5 +1,5 @@
--export const API_URL = 'http://localhost:8000/api/v1';
--export const BASE_URL = 'http://localhost:8000';
-+export const API_URL = 'http://127.0.0.1:8000/api/v1';
-+export const BASE_URL = 'http://127.0.0.1:8000';
- export function setCookie(name,value,days) {
-     let expires = "";
-     if (days) {
-Index: API/API/settings.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>\"\"\"\nDjango settings for API project.\n\nGenerated by 'django-admin startproject' using Django 5.0.3.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/5.0/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/5.0/ref/settings/\n\"\"\"\nimport os\nfrom pathlib import Path\n\nfrom dotenv import load_dotenv\nimport datetime\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\nload_dotenv()\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = '0a4fd7e3567eab20bab2f2d6682ea96d0d865050bfcde9c293aa7f9ec48bce55'\n\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = ['*']\nCORS_ALLOWED_ORIGINS = [\n    \"http://localhost:3000\",\n]\nCSRF_TRUSTED_ORIGINS = [\n    \"http://localhost:3000\",\n]\nCORS_ALLOW_CREDENTIALS = True\n# Application definition\n\nINSTALLED_APPS = [\n    'daphne',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'corsheaders',\n    \"Apps.Auth.apps.AuthConfig\",\n    \"Apps.Profile.apps.ProfileConfig\",\n    \"Apps.Tournament.apps.TournamentConfig\",\n    'Apps.SocialMedia.apps.SocialmediaConfig',\n    \"Apps.Chat.apps.ChatConfig\",\n    \"Apps.UserStatus.apps.OnlineusersConfig\"\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'API.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates']\n        ,\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'API.wsgi.application'\nASGI_APPLICATION = 'API.asgi.application'\n\nCHANNEL_LAYERS = {\n    \"default\": {\n        \"BACKEND\": \"channels_redis.core.RedisChannelLayer\",\n        \"CONFIG\": {\n            \"hosts\": [(\"127.0.0.1\", 6379)],\n        },\n    },\n}\n\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    )\n}\n\n\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\n\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.postgresql\",\n        \"NAME\": os.getenv('PG_DB'),\n        \"USER\": os.getenv('PG_USER'),\n        \"PASSWORD\": os.getenv('PG_PASSWORD'),\n        \"HOST\": os.getenv('PG_HOST'),\n        \"PORT\": os.getenv('PG_PORT'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/5.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'Europe/Istanbul'\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\n\nSTATIC_URL = 'static/'\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': datetime.timedelta(days=1),\n    'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=50),\n    'ROTATE_REFRESH_TOKENS': True,\n    'BLACKLIST_AFTER_ROTATION': True,\n    'UPDATE_LAST_LOGIN': False,\n    'ALGORITHM': 'HS256',\n    'VERIFYING_KEY': None,\n    'AUDIENCE': None,\n    'ISSUER': None,\n    'JWK_URL': None,\n    'LEEWAY': 0,\n    'AUTH_HEADER_TYPES': ('Bearer',),\n    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',\n    'USER_ID_FIELD': 'id',\n    'USER_ID_CLAIM': 'user_id',\n    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',\n    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),\n    'TOKEN_TYPE_CLAIM': 'token_type',\n    'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',\n    'TOKEN_EXPIRED_CALLBACK': 'token_expired_callback',\n    'JTI_CLAIM': 'jti',\n    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',\n    'SLIDING_TOKEN_LIFETIME': datetime.timedelta(minutes=5),\n    'SLIDING_TOKEN_REFRESH_LIFETIME': datetime.timedelta(days=1),\n}\n\n\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_USE_TLS = True\nEMAIL_PORT = 587\nEMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_USE_SSL = False\nCACHES = {\n    'default': {\n        \"BACKEND\": \"django.core.cache.backends.locmem.LocMemCache\",\n        'LOCATION': 'unique-snowflake',\n    }\n}\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media/images'\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/API/API/settings.py b/API/API/settings.py
---- a/API/API/settings.py	(revision 8541ec7fb11979a88d2f8e05eaa16a38408e1955)
-+++ b/API/API/settings.py	(date 1712268152922)
-@@ -32,9 +32,11 @@
- ALLOWED_HOSTS = ['*']
- CORS_ALLOWED_ORIGINS = [
-     "http://localhost:3000",
-+    "http://127.0.0.1:3000"
- ]
- CSRF_TRUSTED_ORIGINS = [
-     "http://localhost:3000",
-+    "http://127.0.0.1:3000"
- ]
- CORS_ALLOW_CREDENTIALS = True
- # Application definition
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_5_04_2024__05_16__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_04_2024__05_16__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_04_2024__05_16__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_04_2024__05_16__Changes_.xml	
+++ /dev/null	
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_5_04_2024,_05_16_[Changes]" date="1712283364700" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_04_2024,_05_16_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 5.04.2024, 05:16 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_5_04_2024__01_02__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_5_04_2024__01_02__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_5_04_2024__01_02__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_5_04_2024__01_02__Changes_.xml	
+++ /dev/null	
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_5_04_2024,_01_02_[Changes]" date="1712268152925" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_04_2024,_01_02_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 5.04.2024, 01:02 [Changes]" />
-</changelist>
\ No newline at end of file

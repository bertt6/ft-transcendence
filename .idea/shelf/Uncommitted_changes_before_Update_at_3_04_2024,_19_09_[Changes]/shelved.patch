Index: Backend/static/scripts/spa.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export const API_URL = 'http://localhost:8000/api/v1';\nexport const BASE_URL = 'http://localhost:8000';\nexport function setCookie(name,value,days) {\n    let expires = \"\";\n    if (days) {\n        const date = new Date();\n        date.setTime(date.getTime() + (days*24*60*60*1000));\n        expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\n}\nexport function getCookie(name) {\n    const nameEQ = name + \"=\";\n    const ca = document.cookie.split(';');\n    for(let i=0; i < ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0)===' ') c = c.substring(1,c.length);\n        if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length,c.length);\n    }\n    return null;\n}\nconst routes = new Map([\n    ['login', {\n    auth_required:false,\n    url:[\"/auth/login/\"],\n    html: `\n    <div class=\"background container-fluid\">\n        <div class=\"d-flex align-items-center justify-content-center h-100\">\n            <form class=\"login-wrapper p-5 gap-2\" id=\"login-form\">\n                <div\n                        style=\"\n                display: flex;\n                align-items: center;\n                justify-content: center;\n              \"\n                >\n                    <h1 style=\"color: white\">LOGIN</h1>\n                </div>\n                <div>\n                    <input\n                            type=\"text\"\n                            class=\"login-input p-2\"\n                            id=\"username\"\n                            placeholder=\"USERNAME\"\n                    />\n                </div>\n                <div>\n                    <input\n                            type=\"text\"\n                            class=\"login-input p-2\"\n                            id=\"password\"\n                            placeholder=\"PASSWORD\"\n                    />\n                </div>\n                <div\n                        style=\"\n                display: flex;\n                align-items: center;\n                justify-content: center;\n              \"\n                >\n                    <div>\n\n                        <button class=\"login-button\" type=\"submit\">LOGIN</button>\n                        <pong-redirect href=\"register\">\n                            <button class=\"login-button\" type=\"button\">REGISTER</button>\n                        </pong-redirect>\n\n                    </div>\n                </div>\n                <button class=\"ecole-login-button\">\n                    Login with 42\n                    <div>\n                        <img src=\"/static/public/42.svg\" alt=\"\"/>\n                    </div>\n                </button>\n            </form>\n        </div>\n    </div>`\n    }],\n    ['register', {\n        auth_required: false,\n        url: [\"/auth/register/\"],\n        html: `\n              <div class=\"background container-fluid\">\n            <div class=\"d-flex align-items-center justify-content-center h-100\">\n              <form class=\"register-wrapper p-5 gap-2\" id=\"register-form\">{% csrf_token %}\n                <div\n                  style=\"\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                  \"\n                >\n                  <h1 style=\"color: white\">REGISTER</h1>\n                </div>\n                <div class=\"register-input-wrapper\">\n                  <label for=\"username\">username</label>\n                  <input\n                    type=\"text\"\n                    class=\"register-input p-2\"\n                    placeholder=\"USERNAME\"\n                    id=\"username\"\n                  />\n                </div>\n                <div class=\"register-password\">\n                  <div class=\"register-input-wrapper\">\n                    <label for=\"password\">password</label>\n                    <input\n                      type=\"text\"\n                      class=\"register-input p-2\"\n                      placeholder=\"PASSWORD\"\n                      id=\"password\"\n                      required\n                    />\n                  </div>\n                  <div class=\"register-input-wrapper\">\n                    <label for=\"password\">Re enter your password</label>\n                    <input\n                      type=\"text\"\n                      class=\"register-input p-2\"\n                      id=\"password2\"\n                      required\n                    />\n                  </div>\n                </div>\n                <div class=\"register-input-wrapper\">\n                  <label for=\"Email\">Email</label>\n                  <input\n                    type=\"text\"\n                    class=\"register-input p-2\"\n                    placeholder=\"EMAIL\"\n                    id=\"email\"\n                    required\n                  />\n                </div>\n                <div\n                  style=\"\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    gap: 10px;\n                    width: 100%;\n                  \"\n                >\n                  <div>\n                    <button class=\"register-button\" id=\"register-button\">\n                        REGISTER\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n    `\n    }],\n    ['profile', {\n        auth_required: true,\n        url: [/\\/profile\\/\\w+/g],\n        html: `\n              <div\n        class=\"background container-fluid social-background\"\n        style=\"padding: 0\"\n      >\n        <div class=\"profile-wrapper\">\n          <div class=\"profile-info\" id=\"profile-info\">\n            <div class=\"profile-info-wrapper\">\n                <div class=\"profile-edit\">\n                    <button class=\"pong-button\" id=\"edit-button\">\n                        <img src=\"/static/public/edit.svg\" alt=\"\"></button>\n                </div>\n              <div class=\"profile-photo skeleton\"></div>\n              <div class=\"skeleton profile-data\">\n                <h1></h1>\n                <span></span>\n              </div>\n              <div class=\"profile-bio skeleton\">\n                <p></p>\n              </div>\n            </div>\n          </div>\n          <div class=\"profile-data\">\n            <div class=\"data-headers\">\n              <button class=\"header-wrapper\" id=\"history-button\"><span>MATCH HISTORY</span></button>\n              <button class=\"header-wrapper\" id=\"friends-button\"><span> FRIENDS </span></button>\n              <button class=\"header-wrapper\" id=\"stats-button\"><span>STATS</span></button>\n            </div>\n          <div id=\"data-wrapper\">\n                <div class=\"friends-wrapper\" style=\"display: none\">\n              <div class=\"friend-wrapper\">\n                <div class=\"friend-info\">\n                  <div class=\"friend-image\">\n                    <img src=\"https://picsum.photos/id/237/200/300\" alt=\"\" />\n                  </div>\n                  <div class=\"friend-data\">\n                    <h6>NAME</h6>\n                    <span>First Last name</span>\n                  </div>\n                </div>\n                <div class=\"friend-more\">\n                  <div><img src=\"/public/image.svg\" alt=\"\" /></div>\n                  <div><img src=\"/public/chat-bubble.svg\" alt=\"\" /></div>\n                  <div><img src=\"/public/more.svg\" alt=\"\" /></div>\n                </div>\n              </div>\n              <div class=\"friend-wrapper\">\n                <div class=\"friend-info\">\n                  <div class=\"friend-image\">\n                    <img src=\"https://picsum.photos/id/237/200/300\" alt=\"\" />\n                  </div>\n                  <div class=\"friend-data\">\n                    <h6>NAME</h6>\n                    <span>First Last name</span>\n                  </div>\n                </div>\n                <div class=\"friend-more\">\n                  <div><img src=\"/public/image.svg\" alt=\"\" /></div>\n                  <div><img src=\"/public/chat-bubble.svg\" alt=\"\" /></div>\n                  <div><img src=\"/public/more.svg\" alt=\"\" /></div>\n                </div>\n              </div>\n            </div>\n            <div class=\"histories-wrapper\">\n              <div class=\"history-wrapper\">\n                <div class=\"friend-info\">\n                  <div class=\"history-type\"><h5>1v1</h5></div>\n                </div>\n                <div class=\"history-data\">\n                  <h5>BSAMLI</h5>\n                  <h5>VS</h5>\n                  <h5>OFIRAT</h5>\n                </div>\n                <div class=\"history-score\">\n                  <h5>4</h5>\n                  <h5>-</h5>\n                  <h5>0</h5>\n                </div>\n                <div>\n                  <h5>1 DAY AGO</h5>\n                </div>\n              </div>\n              <div class=\"history-wrapper\">\n                <div class=\"friend-info\">\n                  <div class=\"history-type\"><h5>1v1</h5></div>\n                </div>\n                <div class=\"history-data\">\n                  <h5>BSAMLI</h5>\n                  <h5>VS</h5>\n                  <h5>OFIRAT</h5>\n                </div>\n                <div class=\"history-score\">\n                  <h5>4</h5>\n                  <h5>-</h5>\n                  <h5>0</h5>\n                </div>\n                <div>\n                  <h5>1 DAY AGO</h5>\n                </div>\n              </div>\n              <div class=\"history-wrapper\">\n                <div>\n                  <h5>Tournament</h5>\n                </div>\n                <div class=\"history-data\">\n                  <h5>BSAMLI</h5>\n                  <h5>VS</h5>\n                  <h5>OFIRAT</h5>\n                </div>\n                <div class=\"history-score\">\n                  <h5>4</h5>\n                  <h5>-</h5>\n                  <h5>0</h5>\n                </div>\n                <div>\n                  <h5>1 DAY AGO</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n          </div>\n        </div>\n      </div>\n`\n    }],\n    ['social',{\n    auth_required: true,\n    url: ['/social/',  '/social/\\\\w+/g'],\n    html: `\n          <div\n        class=\"background container-fluid social-background\"\n        style=\"padding: 0\"\n      >\n        <div class=\"d-flex h-100\">\n          <div class=\"d-flex position-relative\">\n            <div id=\"user-chat-friends\">\n                <div class=\"users-wrapper\">\n                <div>\n                  <div class=\"chat-send-wrapper\">\n                    <h2>SEARCH...</h2>\n                    <input type=\"text\" placeholder=\"SEARCH A NAME\" id=\"friend-search-input\" />\n                </div>\n              </div>\n              <div class=\"user-data-wrapper loading\" id=\"user-data-wrapper\">\n              <div class=\"lds-ring\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            </div>\n              </div>\n            </div>\n            </div>\n            <div class=\"chat-container\">\n              <div class=\"active-user-wrapper\">\n                <div class=\"user-info\">\n                  <div class=\"user-pic-wrapper\">\n                    <img\n                      src=\"https://picsum.photos/seed/picsum/200/300\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <div class=\"active-user-info-wrapper\">\n                    <h6>test1</h6>\n                    <span>active now</span>\n                    <div class=\"spotify-info\">\n                      <img src=\"/static/public/music.svg\" alt=\"\" style=\"width: 20px\" />\n                      <span>Currently listening test123</span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"d-flex\">\n                  <img src=\"/static/public/more.svg\" alt=\"\" style=\"width: 50px\" />\n                  <div id=\"chat-close-button\" style=\"cursor: pointer\">\n                    <img  src=\"/static/public/go-back.svg\" alt=\"\" />\n                  </div>\n                </div>\n              </div>\n              <div class=\"conversation-wrapper\">\n                <div class=\"received-message-container\">\n                  <span>TEST6</span>\n                  <p>\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit. A\n                    repudiandae autem quibusdam totam numquam explicabo saepe\n                    iure veritatis natus voluptas voluptate eveniet quos quasi\n                    facilis laudantium suscipit, obcaecati optio illo.\n                  </p>\n                </div>\n                <div class=\"sent-message-container\">\n                  <span>TEST2</span>\n                  <p>\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                    Quis cumque maxime iste odio ratione aliquid nisi commodi\n                    asperiores, quo nihil sint, voluptate iure vel accusamus\n                    odit incidunt porro debitis illo!\n                  </p>\n                </div>\n                <div class=\"sent-message-container\">\n                  <span>lorem</span>\n                  <p>\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                    Quis cumque maxime iste odio ratione aliquid nisi commodi\n                    asperiores, quo nihil sint, voluptate iure vel accusamus\n                    odit incidunt porro debitis illo!\n                  </p>\n                </div>\n                <div class=\"sent-message-container\">\n                  <span>TEST2</span>\n                  <p>\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                    Veniam accusantium fugit ad magnam, odio numquam id quidem\n                    saepe, deserunt consequuntur commodi animi dolor error\n                    debitis sed natus minus. Tempora, laborum?\n                  </p>\n                </div>\n                <div class=\"received-message-container\">\n                  <span>TEST6</span>\n                  <p>\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit. A\n                    repudiandae autem quibusdam totam numquam explicabo saepe\n                    iure veritatis natus voluptas voluptate eveniet quos quasi\n                    facilis laudantium suscipit, obcaecati optio illo.\n                  </p>\n                </div>\n                <div class=\"received-message-container\">\n                  <span>TEST6</span>\n                  <p>\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit. A\n                    repudiandae autem quibusdam totam numquam explicabo saepe\n                    iure veritatis natus voluptas voluptate eveniet quos quasi\n                    facilis laudantium suscipit, obcaecati optio illo.\n                  </p>\n                </div>\n              </div>\n              <form class=\"send-container\" style=\"margin-bottom: 1px\">\n                <input\n                  type=\"text\"\n                  name=\"\"\n                  id=\"\"\n                  placeholder=\"Send a message\"\n                  style=\"width: 100%\"\n                />\n                <div>\n                  <img  src=\"/static/public/send.svg\"alt=\"\" />\n                </div>\n              </form>\n            </div>\n          </div>\n          <div class=\"social-container py-2\" id=\"social-container\">\n            <div\n              class=\"social-wrapper\"\n              id=\"social-wrapper\"\n            >\n              <div class=\"d-flex flex-column gap-2\">\n                <div class=\"social-send-info\">\n                  <div class=\"user-pic-wrapper\">\n                    <img\n                      src=\"https://picsum.photos/seed/picsum/200/300\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <h6 id=\"username\">Test1</h6>\n                </div>\n                <form class=\"social-send\" id=\"social-send-form\">\n                  <input\n                    type=\"text\"\n                    name=\"\"\n                    id=\"social-text-input\"\n                    style=\"background-color: rgba(126, 126, 126, 0.397)\"\n                    placeholder=\"What do you think\"\n                  />\n                    <div class=\"form-input-wrapper\">\n                    <label for=\"image-add\" class=\"custom-file-upload\"></label>\n                    <input\n                    type=\"file\" id=\"image-add\"\n                    src=\"{% static '/public/image.svg' %}\" alt=\"\" style=\"width: 35px\"\n                    accept=\"image/jpeg,image/png,image/gif\"\n                    >\n                <button type=\"submit\" id=\"send-button\">\n                    <img src=\"/static/public/send.svg\" alt=\"\" />\n                </button>\n                    </div>\n                </form>\n              </div>\n              <div class=\"posts-container\" id=\"posts-wrapper\">\n                <div class=\"post-container skeleton\" id=\"post-wrapper\">\n                </div>\n              </div>\n            </div>\n        </div>\n        </div>\n      </div>\n`\n    }],\n    ['home', {\n        auth_required: true,\n        url: ['/home/'],\n        html: `\n      <div\n        class=\"background container-fluid position-relative\"\n        style=\"padding: 0\"\n      >\n        <div class=\"main-buttons-wrapper\">\n          <pong-redirect class=\"profile-wrapper\" href=\"/profile\">\n            <img src=\"https://picsum.photos/seed/picsum/200/300\" alt=\"\" />\n          </pong-redirect>\n          <div class=\"play-wrapper\">\n            <div\n              style=\"\n                display: flex;\n                align-items: center;\n                justify-content: center;\n              \"\n            >\n              <h1>WELCOME TO PONG</h1>\n            </div>\n            <div class=\"button-wrapper\">\n              <button class=\"play-button\">LEADERBOARD</button>\n              <button class=\"play-button\" id=\"multiplayer-button\">\n                MULTIPLAYER\n              </button>\n              <button class=\"play-button\">SINGLEPLAYER</button>\n              <pong-redirect href=\"social\">\n                  <button class=\"play-button\">SOCIAL</button>\n              </pong-redirect>\n            </div>\n          </div>\n        </div>\n      </div>\n\n              `\n    }],\n]);\nconst requiredScripts = [\n    '/static/components/Notification.js',\n    '/static/components/Component.js',\n    '/static/components/spinner.js',\n    '/static/scripts/Request.js',\n    '/static/scripts/utils.js'\n]\n\nfunction handleStyles(value)\n{\n    let style = document.getElementById('style');\n    if(style)\n        style.remove();\n    let newStyle = document.createElement('link');\n    newStyle.rel = 'stylesheet';\n    newStyle.href = '/static/styles/' + value + '.css';\n    newStyle.id = 'style';\n    document.head.appendChild(newStyle);\n}\nfunction findRouteKey(pathName) {\n    for (let [key, value] of routes) {\n        for(let url of value.url)\n        {\n            if(url instanceof RegExp)\n            {\n                if(url.test(pathName))\n                    return key;\n            }\n            else if(pathName.includes(url))\n                return key;\n        }\n    }\n    return null;\n}\nfunction loadRequiredScripts() {\n    requiredScripts.forEach(script => {\n        if (!document.getElementById(script)) {\n            let newScript = document.createElement('script');\n            newScript.src = script;\n            newScript.id = script;\n            newScript.type = 'module';\n            document.body.appendChild(newScript);\n        }\n    });\n    let pathName = window.location.pathname;\n    let value = findRouteKey(pathName);\n    if(!value)\n        return;\n    if(document.getElementById('script'))\n        document.getElementById('script').remove();\n    let script = document.createElement('script');\n    script.src = '/static/scripts/' + value + '.js?ts=' + new Date().getTime();\n    script.type = 'module';\n    script.id = \"script\";\n    document.body.appendChild(script);\n    handleStyles(value)\n\n}\nexport function loadPage(fileName) {\n    const route = routes.get(fileName);\n    let isMatch = false;\n\n    if (route.url instanceof RegExp) {\n        isMatch = route.url.test(window.location.pathname);\n    } else {\n        isMatch = window.location.pathname.includes(route.url);\n    }\n    if (!isMatch) {\n        history.pushState({}, '', window.location.origin + route.url);\n    }\n    let content = document.getElementById('main');\n    content.innerHTML = route.html;\n    App();\n}\n\n\nfunction checkForAuth()\n{\n    if(getCookie('tokens'))\n        return;\n    const pathName = window.location.pathname;\n    let value = pathName.replace(/\\//g, '');\n\n    let route = routes.get(value);\n    if(!route)\n        return;\n    if(route.auth_required === true)\n        loadPage('login');\n}\nconst App = async () => {\n    loadRequiredScripts();\n    checkForAuth();\n}\nwindow.addEventListener('popstate', (event ) => {\n    let pathName = window.location.pathname;\n    let value = pathName.split('/').filter(Boolean).pop();\n    if(value === undefined)\n        value = 'home';\n    loadPage(value);\n    }\n);\n\ndocument.addEventListener('DOMContentLoaded', App);
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/static/scripts/spa.js b/Backend/static/scripts/spa.js
--- a/Backend/static/scripts/spa.js	
+++ b/Backend/static/scripts/spa.js	
@@ -1,5 +1,5 @@
-export const API_URL = 'http://localhost:8000/api/v1';
-export const BASE_URL = 'http://localhost:8000';
+export const API_URL = 'http://127.0.0.1:8000/api/v1';
+export const BASE_URL = 'http://127.0.0.1:8000';
 export function setCookie(name,value,days) {
     let expires = "";
     if (days) {
@@ -580,8 +580,10 @@
         loadPage('login');
 }
 const App = async () => {
+    console.log("selam")
     loadRequiredScripts();
     checkForAuth();
+    console.log("selam123")
 }
 window.addEventListener('popstate', (event ) => {
     let pathName = window.location.pathname;
Index: API/Apps/SocialMedia/migrations/0012_tweet_image.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Generated by Django 5.0.3 on 2024-03-28 08:34\n\nfrom django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('SocialMedia', '0011_merge_20240327_1221'),\n    ]\n\n    operations = [\n        migrations.AddField(\n            model_name='tweet',\n            name='image',\n            field=models.ImageField(blank=True, default=None, null=True, upload_to=''),\n        ),\n    ]\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/API/Apps/SocialMedia/migrations/0012_tweet_image.py b/API/Apps/SocialMedia/migrations/0012_tweet_image.py
--- a/API/Apps/SocialMedia/migrations/0012_tweet_image.py	
+++ b/API/Apps/SocialMedia/migrations/0012_tweet_image.py	
@@ -10,9 +10,4 @@
     ]
 
     operations = [
-        migrations.AddField(
-            model_name='tweet',
-            name='image',
-            field=models.ImageField(blank=True, default=None, null=True, upload_to=''),
-        ),
     ]
Index: API/API/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\nDjango settings for API project.\n\nGenerated by 'django-admin startproject' using Django 5.0.3.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/5.0/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/5.0/ref/settings/\n\"\"\"\nimport os\nfrom pathlib import Path\n\nfrom dotenv import load_dotenv\nimport datetime\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\nload_dotenv()\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = '0a4fd7e3567eab20bab2f2d6682ea96d0d865050bfcde9c293aa7f9ec48bce55'\n\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = ['*']\nCORS_ALLOWED_ORIGINS = [\n    \"http://localhost:3000\",\n]\nCSRF_TRUSTED_ORIGINS = [\n    \"http://localhost:3000\",\n]\nCORS_ALLOW_CREDENTIALS = True\n# Application definition\n\nINSTALLED_APPS = [\n    'daphne',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'corsheaders',\n    \"Apps.Auth.apps.AuthConfig\",\n    \"Apps.Profile.apps.ProfileConfig\",\n    \"Apps.Tournament.apps.TournamentConfig\",\n    'Apps.SocialMedia.apps.SocialmediaConfig',\n    \"Apps.Chat.apps.ChatConfig\",\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'API.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates']\n        ,\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'API.wsgi.application'\nASGI_APPLICATION = 'API.asgi.application'\n\nCHANNEL_LAYERS = {\n    \"default\": {\n        \"BACKEND\": \"channels_redis.core.RedisChannelLayer\",\n        \"CONFIG\": {\n            \"hosts\": [(\"127.0.0.1\", 6379)],\n        },\n    },\n}\n\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    )\n}\n\n\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\n\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.postgresql\",\n        \"NAME\": os.getenv('PG_DB'),\n        \"USER\": os.getenv('PG_USER'),\n        \"PASSWORD\": os.getenv('PG_PASSWORD'),\n        \"HOST\": os.getenv('PG_HOST'),\n        \"PORT\": os.getenv('PG_PORT'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/5.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'Europe/Istanbul'\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\n\nSTATIC_URL = 'static/'\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': datetime.timedelta(days=1),\n    'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=50),\n    'ROTATE_REFRESH_TOKENS': True,\n    'BLACKLIST_AFTER_ROTATION': True,\n    'UPDATE_LAST_LOGIN': False,\n    'ALGORITHM': 'HS256',\n    'VERIFYING_KEY': None,\n    'AUDIENCE': None,\n    'ISSUER': None,\n    'JWK_URL': None,\n    'LEEWAY': 0,\n    'AUTH_HEADER_TYPES': ('Bearer',),\n    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',\n    'USER_ID_FIELD': 'id',\n    'USER_ID_CLAIM': 'user_id',\n    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',\n    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),\n    'TOKEN_TYPE_CLAIM': 'token_type',\n    'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',\n    'TOKEN_EXPIRED_CALLBACK': 'token_expired_callback',\n    'JTI_CLAIM': 'jti',\n    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',\n    'SLIDING_TOKEN_LIFETIME': datetime.timedelta(minutes=5),\n    'SLIDING_TOKEN_REFRESH_LIFETIME': datetime.timedelta(days=1),\n}\n\n\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_USE_TLS = True\nEMAIL_PORT = 587\nEMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_USE_SSL = False\n\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media/images'\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/API/API/settings.py b/API/API/settings.py
--- a/API/API/settings.py	
+++ b/API/API/settings.py	
@@ -32,9 +32,11 @@
 ALLOWED_HOSTS = ['*']
 CORS_ALLOWED_ORIGINS = [
     "http://localhost:3000",
+    "http://127.0.0.1:3000"
 ]
 CSRF_TRUSTED_ORIGINS = [
     "http://localhost:3000",
+    "http://127.0.0.1:3000"
 ]
 CORS_ALLOW_CREDENTIALS = True
 # Application definition
Index: Backend/static/scripts/social.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {API_URL, getCookie, loadPage, BASE_URL} from \"./spa.js\";\nimport {notify} from \"../components/Notification.js\";\nimport BaseComponent from \"../components/Component.js\";\nimport {request} from \"./Request.js\";\nclass ChatFriendsComponent extends  BaseComponent{\n    constructor(state,parentElement = null) {\n        super(state,parentElement);\n        this.html = this.handleHTML()\n    }\n    handleHTML()\n    {\n        return `\n              ${this.state.friends.map(friend => `\n                <div class=\"user-wrapper\">\n                  <div class=\"user-pic-wrapper\">\n                    <img\n                      src=\"https://picsum.photos/seed/picsum/200/300\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <div class=\"user-info-wrapper\">\n                    <div\n                      class=\"d-flex align-items-center justify-content-center gap-2\"\n                    >\n                      <h6>${friend.nickname.length <=0 ? friend.user.username: friend.nickname}</h6>\n                      <div class=\"online-icon\"></div>\n                    </div>\n                    <span>Active Now</span>\n            </div>\n            </div>\n              `).join('')}\n`\n    }\n    render() {\n        super.render();\n    }\n    setState(newState)\n    {\n        this.state = {...this.state, ...newState};\n        this.html = this.handleHTML();\n        this.render();\n    }\n}\nclass SocialPostsComponent extends BaseComponent {\n    constructor(state, parentElement = null) {\n        super(state, parentElement);\n        this.html = \"\";\n    }\n    handleHTML() {\n        if(this.state.tweets === undefined)\n            return \"\";\n        let userId = this.state.userId;\n    return`\n    ${this.state.tweets.map(tweet => `\n            <div class=\"post-container\">\n                  <div class=\"d-flex position-relative\">\n                    <div class=\"post-info\">\n                      <div class=\"user-pic-wrapper\">\n                        <img\n                          src=\"https://picsum.photos/seed/picsum/200/300\"\n                          alt=\"\"\n                        />\n                      </div>\n                      <div>\n                        <h6>${tweet.from_user.nickname}</h6>\n                        <span>${calculateDate(tweet)}</span>\n                      </div>\n                    </div>\n                    <div>\n                      <img  src=\"/static/public/more.svg\" alt=\"\" style=\"width: 50px\" />\n                    </div>\n                  </div>\n                  <div>\n                    <div class=\"post-text\">\n                      <p>\n                        ${escapeHTML(tweet.content)}\n                      </p>\n                    </div>\n                    ${tweet.image ? `\n                    <div class=\"post-image\">\n                      <img  src=\"${BASE_URL}${tweet.image}\" alt=\"\" />\n                    </div>\n                    `: ''}\n                  </div>\n                  <div class=\"post-interaction\">\n                    <div class=\"like-button\" data-tweet-id=\"${tweet.id}\">\n                      <img  src=\"/static/public/${tweet.liked_users.includes(userId) ? \"liked\" :\"not-liked\"}.svg\" alt=\"\" />\n                    </div>\n                    <button class=\"comment-button\" data-tweet-id=\"${tweet.id}\"\">\n                      <img  src=\"/static/public/chat-bubble.svg\"  alt=\"\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            `).join('')}\n            `\n    }\n    setState(newState)\n    {\n        this.state = {...this.state, ...newState};\n        this.html = this.handleHTML()\n        this.render()\n    }\n}\nclass PostTweetFormComponent extends  BaseComponent\n{\n    constructor(state,parentElement = null) {\n        super(state,parentElement);\n        this.html = this.handleHTML();\n    }\n    handleHTML()\n    {\n        if(this.state.imageUrl === undefined)\n            return '';\n        return `\n            <div class=\"uploaded-image\">\n\n                <button class=\"image-close-button\" id=\"preview-close-button\" type=\"button\">\n                    X\n                </button>\n            <img src=${this.state.imageUrl} alt=\"\"  />\n         </div>\n\n        `\n    }\n render() {\n        if(this.state.imageUrl === undefined)\n        {\n            document.getElementById('image-preview')?.remove();\n            return;\n        }\n        if(document.getElementById('image-preview'))\n        {\n            document.getElementById('image-preview').remove();\n        }\n     let div = document.createElement('div');\n    div.innerHTML = this.html;\n    this.parentElement.appendChild(div);\n    div.id = 'image-preview';\n    let previewCloseButton = document.getElementById('preview-close-button');\n    if(previewCloseButton)\n    {\n        previewCloseButton.addEventListener('click', (event) => {\n            postTweetFormComponent.setState({imageUrl: undefined});\n        });\n    }\n}\n\n    setState(newState)\n    {\n        this.state = {...this.state, ...newState};\n        this.html = this.handleHTML();\n        this.render();\n    }\n\n}\nclass SelectedPostComponent extends BaseComponent{\n    constructor(state, parentElement = null)\n    {\n        super(state, parentElement);\n        this.html = this.handleHTML();\n    }\n    handleHTML()\n    {\n        const {results} = this.state.tweet;\n        const {tweet, comments} = results;\n        const {userId} = this.state;\n        return `\n            <div class=\"selected-post\">\n              <div class=\"post-container\">\n                <div class=\"d-flex position-relative\">\n                  <div class=\"post-info\">\n                    <div class=\"user-pic-wrapper\">\n                      <img\n                        src=\"https://picsum.photos/seed/picsum/200/300\"\n                        alt=\"\"\n                      />\n                    </div>\n                    <div>\n                      <h6>TEST1</h6>\n                      <span>${calculateDate(tweet)}</span>\n                    </div>\n                  </div>\n                  <div>\n                    <img src=\"/static/public/more.svg\" alt=\"\" style=\"width: 50px\" />\n                  </div>\n                  <div id=\"comment-back-button\" style=\"cursor: pointer\">\n                    <img src=\"/static/public/go-back.svg\" alt=\"\" />\n                  </div>\n                </div>\n                <div>\n                  <div class=\"post-text\">\n                    <p>\n                    ${escapeHTML(tweet.content)}\n                    </p>\n                  </div>\n                  ${tweet.image ? \n            `<div class=\"post-image\">\n                    <img src=\"${BASE_URL}${tweet.image}\" alt=\"\" />\n              </div>`: ''}\n                </div>\n                <div class=\"post-interaction\">\n                  <div class=\"like-button\" data-tweet-id=\"${tweet.id}\">\n                    <img src=\"/static/public/${tweet.liked_users.includes(userId) ? \"liked\" :\"not-liked\"}.svg\" alt=\"\" />\n                  </div>\n                  <div>\n                    <img src=\"/static/public/chat-bubble.svg\" alt=\"\" />\n                  </div>\n                  <form id=\"comment-send-form\">\n                    <input\n                      type=\"text\"\n                      name=\"\"\n                      id=\"comment-input\"\n                      placeholder=\"WRITE A COMMENT...\"\n                    />\n                  </form>\n                </div>\n                <div class=\"post-comments\">\n            ${comments.map(comment => `\n          <div class=\"post-comment\">\n                <div class=\"user-pic-wrapper\" style=\"height: 3rem\">\n                  <img\n                    src=\"https://picsum.photos/seed/picsum/200/300\"\n                    alt=\"\"\n                  />\n                </div>\n                <div style=\"flex: 1\">\n                <div style=\"display: flex;justify-content: space-between\">          \n              <h6>${comment.from_user.nickname}</h6>\n                <span>${calculateDate(comment)}</span>\n</div>\n                  <p>\n                    ${escapeHTML(comment.content)}\n                  </p>\n                </div>\n              </div>\n        `).join('')}\n        \n                </div>\n              </div>\n            </div>\n        `\n    }\n    setState(newState)\n    {\n        this.state = {...this.state, ...newState};\n        this.html = this.handleHTML();\n        this.render();\n    }\n    render()\n    {\n        super.render();\n        let backButton = document.getElementById('comment-back-button');\n        backButton.addEventListener('click', (event) => {\n            history.pushState({}, '', '/socialmedia');\n            renderAllPosts();\n        });\n    }\n}\nlet parentElement = document.getElementById('posts-wrapper');\nlet socialPostsComponent = new SocialPostsComponent({}, parentElement);\nlet parentFormElement = document.getElementById('social-send-form');\nlet postTweetFormComponent = new PostTweetFormComponent({}, parentFormElement);\nfunction   calculateDate(tweet)\n    {\n    let tweetDate = new Date(tweet.date);\n    let currentDate = new Date();\n    let differenceInSeconds = Math.floor((currentDate - tweetDate) / 1000);\n\n    let minute = 60;\n    let hour = minute * 60;\n    let day = hour * 24;\n    let week = day * 7;\n    if (differenceInSeconds < minute) {\n        return `${differenceInSeconds} seconds ago`;\n    }\n    else if (differenceInSeconds < hour) {\n        return `${Math.floor(differenceInSeconds / minute)} minutes ago`;\n    }\n    else if (differenceInSeconds < day) {\n        return `${Math.floor(differenceInSeconds / hour)} hours ago`;\n        }\n    else if (differenceInSeconds < week) {\n        return `${Math.floor(differenceInSeconds / day)} days ago`;\n    }\n    else {\n        return `${Math.floor(differenceInSeconds / week)} weeks ago`;\n        }\n    }\nfunction escapeHTML(str) {\n    let  div = document.createElement('div');\n    div.appendChild(document.createTextNode(str));\n    return div.innerHTML;\n}\nconst fetchChatFriends = async () => {\n\n    const endpoint = `${API_URL}/profile/friends`;\n    try {\n        let response = await request(endpoint, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(getCookie('tokens')).access}`\n            }\n        });\n        let parentElement = document.getElementById('user-data-wrapper');\n        let chatFriendsComponent = new ChatFriendsComponent({friends: response},parentElement);\n        let input = document.getElementById('friend-search-input');\n        input.addEventListener('keyup', async (event) => {\n            let value = event.target.value;\n               let filteredFriends = response.filter(friend => {\n        let nameToCheck = friend.user.username;\n        return nameToCheck.toLowerCase().includes(value.toLowerCase());\n           });\n            chatFriendsComponent.setState({friends: filteredFriends});\n        });\n        chatFriendsComponent.render();\n\n    }\n    catch (error) {\n        console.error('Error:', error);\n    }\n}\nconst fetchSocialPosts = async () => {\n try{\n        let response = await request(`${API_URL}/tweets`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(getCookie('tokens')).access}`,\n\n            }})\n        socialPostsComponent.setState({tweets: response.results.tweets});\n    }\n    catch(error)\n        {\n            console.error('Error:', error);\n            notify('Error fetching social posts', 3, 'error');\n        }\n\n    }\nasync function submitTweet(event) {\n     event.preventDefault();\n        let inputValue = document.getElementById('social-text-input').value;\n        let image = document.getElementById(\"image-add\");\n        let formData = new FormData();\n        formData.append('content', inputValue);\n        if(image.files.length > 0)\n            formData.append('image', image.files[0]);\n        try{\n        let data = await request(`${API_URL}/post_tweet`, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${JSON.parse(getCookie('tokens')).access}`\n            },\n            body: formData\n        });\n        notify('Tweet posted successfully', 3, 'success');\n        let {tweet}= data;\n        socialPostsComponent.setState({tweets: [tweet, ...socialPostsComponent.state.tweets]});\n        }\n        catch(error)\n        {\n            console.error('Error:', error);\n            notify('Error posting tweet', 3, 'error');\n        }\n}\nasync function assignLikeButtons()\n    {\n        let likeButtons = document.getElementsByClassName('like-button');\n        for(let button of likeButtons)\n        {\n            let tweetId = button.getAttribute('data-tweet-id');\n            button.addEventListener('click', async (event) => {\n                try{\n                    let data = await request(`${API_URL}/like_tweet/${tweetId}`, {\n                        method: 'PATCH',\n                        headers: {\n                            'Authorization': `Bearer ${JSON.parse(getCookie('tokens')).access}`\n                        }\n                    });\n                    console.log(data);\n                    button.children[0].src = button.children[0].src.includes('not') ?  '/static/public/liked.svg' : '/static/public/not-liked.svg';\n                }\n                catch(error)\n                {\n                    console.error('Error:', error);\n                    notify('Error liking tweet', 3, 'error');\n                }\n            });\n        }\n    }\nasync function assignEventListeners() {\n    let form = document.getElementById('social-send-form');\n    form.addEventListener('submit', submitTweet);\n    let imageAdd = document.getElementById('image-add');\n    imageAdd.addEventListener('change', (event) => {\n        let file = event.target.files[0];\n        let url = URL.createObjectURL(file);\n        postTweetFormComponent.setState({imageUrl : url});\n    });\n    async function assignCommentButtons()\n    {\n        let commentButtons = document.getElementsByClassName('comment-button');\n        for(let button of commentButtons)\n        {\n            let tweetId = button.getAttribute('data-tweet-id');\n            button.addEventListener('click', async (event) => {\n                history.pushState({}, '', `/social/tweet/${tweetId}`);\n                await renderIndividualPost(tweetId);\n            });\n        }\n    }\n\n    await assignLikeButtons();\n    await assignCommentButtons();\n}\nasync function getProfile()\n{\n    try{\n        let data = await request(`${API_URL}/profile`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(getCookie('tokens')).access}`\n            }\n        });\n        socialPostsComponent.setState({userId: data.id})\n        let nickname = document.getElementById('username');\n        nickname.innerText = data.nickname;\n    }\n    catch(error)\n    {\n        console.error('Error:', error);\n        notify('Error fetching profile', 3, 'error');\n    }\n}\nconst renderIndividualPost = async (tweetId) => {\n    let response = await request(`${API_URL}/get-tweet-and-comments/${tweetId}`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${JSON.parse(getCookie('tokens')).access}`\n        }\n    });\n\n        let data = await request(`${API_URL}/profile`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(getCookie('tokens')).access}`\n            }\n        });\n    let parentElement = document.getElementById('social-container');\n    let selectedPostComponent = new SelectedPostComponent({tweet: response,userId:data.id}, parentElement);\n    selectedPostComponent.render();\n    await assignLikeButtons();\n    await fetchChatFriends()\n    let form = document.getElementById('comment-send-form');\n    form.addEventListener('submit', async (event) => {\n    event.preventDefault();\n    let inputValue = document.getElementById('comment-input').value;\n        try {\n            let data = await request(`${API_URL}/post-comment`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${JSON.parse(getCookie('tokens')).access}`\n                },\n                body: JSON.stringify({content: inputValue, tweet: tweetId})\n            });\n        notify('Comment posted successfully', 3, 'success');\n        let newComments = [ data, ...selectedPostComponent.state.tweet.results.comments];\n        selectedPostComponent.setState({tweet: {results: {tweet: selectedPostComponent.state.tweet.results.tweet, comments: newComments}}});\n        }\n        catch(error)\n        {\n            console.error('Error:', error);\n            notify('Error posting comment', 3, 'error');\n        }\n    }\n    );\n}\nconst renderAllPosts = async () => {\n    let container =    document.getElementById('social-container');\n    container.innerHTML = `\n                  <div\n              class=\"social-wrapper\"\n              id=\"social-wrapper\"\n            >\n              <div class=\"d-flex flex-column gap-2\">\n                <div class=\"social-send-info\">\n                  <div class=\"user-pic-wrapper\">\n                    <img\n                      src=\"https://picsum.photos/seed/picsum/200/300\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <h6 id=\"username\">Test1</h6>\n                </div>\n                <form class=\"social-send\" id=\"social-send-form\">\n                  <input\n                    type=\"text\"\n                    name=\"\"\n                    id=\"social-text-input\"\n                    style=\"background-color: rgba(126, 126, 126, 0.397)\"\n                    placeholder=\"What do you think\"\n                  />\n                    <div class=\"form-input-wrapper\">\n                    <label for=\"image-add\" class=\"custom-file-upload\"></label>\n                    <input\n                    type=\"file\" id=\"image-add\"\n                    src=\"{% static '/public/image.svg' %}\" alt=\"\" style=\"width: 35px\"\n                    accept=\"image/jpeg,image/png,image/gif\"\n                    >\n                <button type=\"submit\" id=\"send-button\">\n                    <img src=\"/static/public/send.svg\" alt=\"\" />\n                </button>\n                    </div>\n                </form>\n              </div>\n              <div class=\"posts-container\" id=\"posts-wrapper\">\n                <div class=\"post-container skeleton\" id=\"post-wrapper\">\n                </div>\n              </div>\n            </div>\n\n    `\n    socialPostsComponent.parentElement = document.getElementById('posts-wrapper');\n    postTweetFormComponent.parentElement = document.getElementById('social-send-form');\n    await fetchChatFriends();\n    await fetchSocialPosts();\n    await getProfile();\n    await assignEventListeners();\n\n}\nconst App = async () => {\n\n    if(!getCookie(\"tokens\"))\n    {\n        loadPage('login');\n        notify('Please login to continue', 3, 'error')\n        return;\n    }\n  let regex = /\\/tweet\\/(\\d+)/;\n    let match = window.location.pathname.match(regex);\n    if (match) {\n        await renderIndividualPost(match[1]);\n    }\n    else\n        await renderAllPosts();\n}\n\nApp().catch(error => console.error('Error:', error));\n\nwindow.addEventListener('popstate', async (event) => {\n    if(window.location.pathname === '/social/')\n        await renderAllPosts();\n    else\n    {\n        let regex = /\\/tweet\\/(\\d+)/;\n        let match = window.location.pathname.match(regex);\n        if (match) {\n            await renderIndividualPost(match[1]);\n        }\n    }\n});
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/static/scripts/social.js b/Backend/static/scripts/social.js
--- a/Backend/static/scripts/social.js	
+++ b/Backend/static/scripts/social.js	
@@ -7,6 +7,7 @@
         super(state,parentElement);
         this.html = this.handleHTML()
     }
+    this.state.twe
     handleHTML()
     {
         return `
@@ -165,6 +166,7 @@
         const {results} = this.state.tweet;
         const {tweet, comments} = results;
         const {userId} = this.state;
+        const{}
         return `
             <div class="selected-post">
               <div class="post-container">
@@ -172,7 +174,7 @@
                   <div class="post-info">
                     <div class="user-pic-wrapper">
                       <img
-                        src="https://picsum.photos/seed/picsum/200/300"
+                        
                         alt=""
                       />
                     </div>

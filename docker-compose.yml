version: '3.8'

services:
  postgres:
    build:
      context: psql
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    volumes:
      - ./psql/data:/var/lib/postgresql/data
    networks:
      - deploy

  backend:
    build:
      context: API
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=API.settings
      - DATABASE_URL=postgres://postgres:123@postgres:5432/transcendenceDB
    volumes:
      - static_volumes:/API/staticfiles
      - media_volumes:/API/media
    command: sh -c "python manage.py collectstatic --noinput && python manage.py migrate &&
             uvicorn API.asgi:application --host 0.0.0.0 --port 8000 --reload"
    networks:
      - deploy

  nginx:
    build: 
      context: ./Nginx
      dockerfile: nginx.Dockerfile
    ports:
      - 1337:80
    volumes:
      - static_volumes:/etc/nginx/html/static
      - media_volumes:/etc/nginx/html/media
    depends_on:
      - backend
    networks:
      - deploy

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - deploy

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./Devops/grafana-prometheus/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./Devops/grafana-prometheus/prometheus/rules.yml:/etc/prometheus/rules.yml

    restart: always
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: always
    networks:
      - monitoring

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"
    command:
      - '--path.rootfs=/host'
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    networks:
      - monitoring

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - "8080:8080"
    volumes: 
      - "/:/rootfs"
      - "/var/run:/var/run"
      - "/sys:/sys"
      - "/var/lib/docker/:/var/lib/docker"
      - "/dev/disk/:/dev/disk"
    privileged: true
    devices: 
      - "/dev/kmsg"
    restart: unless-stopped
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge
  deploy:
    driver: bridge

volumes:
  static_volumes:
  media_volumes:
